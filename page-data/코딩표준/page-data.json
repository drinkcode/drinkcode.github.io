{
    "componentChunkName": "component---src-templates-markdown-template-tsx",
    "path": "/코딩표준",
    "result": {"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"코딩표준","tags":["코딩표준"],"created":"2021-11-25T06:14:05.325Z","modified":"2021-12-08T12:16:50.089Z"},"html":"<h1 id=\"코딩표준\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%94%A9%ED%91%9C%EC%A4%80\" aria-label=\"코딩표준 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코딩표준</h1>\n<h2 id=\"공용\" style=\"position:relative;\"><a href=\"#%EA%B3%B5%EC%9A%A9\" aria-label=\"공용 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>공용</h2>\n<p>매개변수가 4개 이상이면 묶는다\n함수나 매개변수에 null이 들어가면 변수명에 명시 해준다</p>\n<p>예외처리는 내가 아무리 컨트롤 할려고 해도, 나 이외의 예외가 발생한경우를 대비해 쓰는 거다.\nex1) 파일을 읽고 있는데 누가 그 사이에 파일을 지울 때\nex2) 외부에서 웹서버로 요청을 할 때, 보내주는 값이 NULL일 수 있다, 이럴 때 값이 유효한 값인지 검증해야한다\u001e\n그 외에는 남용해서는 안된다</p>\n<p>예외처리도 하는데 메모리덤프해서 분석하는게 제품 퀄리티를 높이는데 더 좋을 수 있다</p>\n<h2 id=\"c\" style=\"position:relative;\"><a href=\"#c\" aria-label=\"c permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>C</h2>\n<p>매개변수가 NULL포인터인지 비교\nNULL포인터로 정수상수 0을 사용하지 말고 NULL포인터 전용 매크로를 사용하자</p>\n<p>오류코드를 처리해주는 함수는 오류코드 or 오류를 반환해야 한다</p>\n<p>inline을 되도록이면 쓰지 않는다, 대신 매크로를 자주 쓰자</p>\n<p>strncpy 사용시 마지막 문자열에 \\0 추가</p>\n<h2 id=\"c-1\" style=\"position:relative;\"><a href=\"#c-1\" aria-label=\"c 1 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>C++</h2>\n<p>전역변수 대신 정적변수(static variable)을 쓸 것\n함수안에 정적변수(static variable) 넣지 않고 클래스 않에 넣을 것\n매크로를 되도록이면 쓰지 않고 inline을 자주 쓰자</p>\n<p>생성자를 생성해줄 땐 예외처리가 적절하다, 그러나 여전히 느리다</p>\n<p>reserve는 vector를 생성한 직후에 되도록 빨리 써야한다</p>\n<p>템플릿은 왠만해선 쓰지말자, 정말 필요한 상황이 아니면(ex 5%이상 성능개선할 수 있음, 쓰지 않으면 복잡해지는 상황)</p>\n<p>assert은 항상 좋지만 그 보다 더 좋은건 static_assert다</p>\n<p>default/delete는 쓰면 좋다</p>\n<p>상속해주지 않는것에 final 쓰는 습관</p>\n<p>override 쓰는 습관</p>\n<p>포인터에는 NULL 대신 nullptr</p>\n<p>enum 대신 enumclass쓰기</p>\n<p>함수안에서 static변수 쓰지 않는다</p>\n<p>map에선 자동정렬 때문에 성능이 저하되는 상황이 생길 수 밖에없다.\n따라서 따로 정렬이 필요하지 않다면 unordered_map을 쓰는걸 권장</p>\n<p>unique_ptr는 즐겨쓰자</p>\n<h3 id=\"auto를-쓰면-좋은-상황\" style=\"position:relative;\"><a href=\"#auto%EB%A5%BC-%EC%93%B0%EB%A9%B4-%EC%A2%8B%EC%9D%80-%EC%83%81%ED%99%A9\" aria-label=\"auto를 쓰면 좋은 상황 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>auto를 쓰면 좋은 상황</h3>\n<ol>\n<li><img src=\"@attachment/Clipboard_2021-11-26-17-36-27.png\" alt=\"\"></li>\n</ol>\n<p><img src=\"@attachment/Clipboard_2021-11-26-17-36-43.png\" alt=\"\"> 2.\n<img src=\"@attachment/Clipboard_2021-11-26-17-37-45.png\" alt=\"\">\n<img src=\"@attachment/Clipboard_2021-11-26-17-37-58.png\" alt=\"\"></p>\n<p>이 외에는 모두 타입을 명시해주는게 좋다</p>\n<h3 id=\"auto-best-practice\" style=\"position:relative;\"><a href=\"#auto-best-practice\" aria-label=\"auto best practice permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>auto best practice</h3>\n<p><img src=\"@attachment/Clipboard_2021-11-26-17-40-51.png\" alt=\"\">\n<img src=\"@attachment/Clipboard_2021-11-26-17-41-00.png\" alt=\"\"></p>\n<h2 id=\"typescript--javascript\" style=\"position:relative;\"><a href=\"#typescript--javascript\" aria-label=\"typescript  javascript permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Typescript &#x26; Javascript</h2>\n<p><a href=\"https://fe-developers.kakaoent.com/2021/211012-typescript-tip/?utm_source=gaerae.com&#x26;utm_campaign=%EA%B0%9C%EB%B0%9C%EC%9E%90%EC%8A%A4%EB%9F%BD%EB%8B%A4&#x26;utm_medium=social\">참고1</a>\n성능을 위해선 enum 보다는 union type 을 쓰자.\n그렇다고 enum이 꼭 나쁜것은 아니다 enum은 자동완성을 지원해준다</p>\n<p>index signature 보다는 mapped type 을 쓰자.</p>\n<p>타입가드는 적극활용 하자</p>\n<h1 id=\"typescript--javascript-안티패턴\" style=\"position:relative;\"><a href=\"#typescript--javascript-%EC%95%88%ED%8B%B0%ED%8C%A8%ED%84%B4\" aria-label=\"typescript  javascript 안티패턴 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Typescript &#x26; Javascript 안티패턴</h1>\n<h2 id=\"references\" style=\"position:relative;\"><a href=\"#references\" aria-label=\"references permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>references</h2>\n<p><a href=\"https://mohwaproject.tistory.com/entry/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%95%88%ED%8B%B0%ED%8C%A8%ED%84%B4Antipatterns%EC%9D%98-%EC%9C%A0%ED%98%95%EA%B3%BC-%EC%82%AC%EC%9A%A9%EB%B2%95\">자바스크립트 안티패턴(Antipatterns)의 유형과 사용법</a></p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EC%BD%94%EB%94%A9%ED%91%9C%EC%A4%80\">코딩표준</a></p>\n<ul>\n<li>\n<p><a href=\"#%EA%B3%B5%EC%9A%A9\">공용</a></p>\n</li>\n<li>\n<p><a href=\"#c\">C</a></p>\n</li>\n<li>\n<p><a href=\"#c-1\">C++</a></p>\n<ul>\n<li><a href=\"#auto%EB%A5%BC-%EC%93%B0%EB%A9%B4-%EC%A2%8B%EC%9D%80-%EC%83%81%ED%99%A9\">auto를 쓰면 좋은 상황</a></li>\n<li><a href=\"#auto-best-practice\">auto best practice</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#typescript--javascript\">Typescript &#x26; Javascript</a></p>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#typescript--javascript-%EC%95%88%ED%8B%B0%ED%8C%A8%ED%84%B4\">Typescript &#x26; Javascript 안티패턴</a></p>\n<ul>\n<li><a href=\"#references\">references</a></li>\n</ul>\n</li>\n</ul>"}}]}},"pageContext":{"title":"코딩표준"}},
    "staticQueryHashes": []}