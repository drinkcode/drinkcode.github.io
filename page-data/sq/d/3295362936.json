{"data":{"allMarkdownRemark":{"nodes":[{"frontmatter":{"tags":["쿠버네티스"],"title":"쿠버네티스 통합로그 환경구축"},"internal":{"content":"\n![쿠버네티스 통합로그 환경구축](./images/쿠버네티스%20통합로그%20환경구축.jpeg)\n\n# 쿠버네티스 통합로그 환경구축\n\n## 프로메테우스 설치\n\nhelm에 stable repo 추가\n\n```bash\nhelm repo add stable https://charts.helm.sh/stable\n```\n\n```bash\nhelm search repo stable\n```\n\n```bash\nhelm repo update\n```\n\n```bash\nhelm install monitor stable/prometheus\n```\n\n```bash\n# 삭제\nhelm uninstall stable/prometheus\n```\n\n```bash\n# 내부구성보기\nhelm inspect values stable/prometheus\n```\n\n```bash\nkubectl get pod\n```\n\n```bash\nkubectl get svc\n```\n\n```bash\n# ClusterIP를 NodePort로 변경\nkubectl edit svc monitor-prometheus-server\n```\n\n![](./images/Clipboard_2021-10-06-11-38-53.png)\n\n---\n\n## install 했지만 pod가 pending상태일 때\n\n```\n$ kubectl get pod\n```\n\n![](./images/Clipboard_2021-10-06-11-57-01.png)\n\n몇 개의 pod이**Pending**상태입니다.\n\n이유는 k8s클러스터에 StorageClass가 정의되어있지 않기 때문입니다.\n(pvc의 요청을 받아줄 provisioner가 없기 때문)\n\n그래서 일단 pv옵션을 false로 변경해주어 EmptyDir을 사용하게 해야 합니다.\n\nHelm chart의 설정을 변경하는 방법은 크게 두가지 방법이 있습니다.\n\n## using yaml\n\n문제가 되는 chart를 먼저 확인해봅시다.\n\n```\n$ helm inspect values stable/prometheus\n```\n\n![](./images/Clipboard_2021-10-06-11-57-21.png)\n\npersistentVolume.enabled가True입니다. 이렇게 표기되어있는 부분이 총 세군데가 있습니다.\n\n수정할 부분만 따로 파일을 만들어주면 됩니다.\n\n```\n$ vim volumeF.yaml\nalertmanager: persistentVolume: enabled: false server: persistentVolume: enabled: false pushgateway:\npersistentVolume: enabled: false\n\n업그레이드해줍시다.\n\n$ helm upgrade -f volumeF.yaml monitor stable/prometheus\n\n업그레이드 하게되면 Pending이었던 pod들이 Running상태로 변하는 것을 확인할 수 있습니다.\n```\n\n![](./images/Clipboard_2021-10-06-11-57-44.png)\n\n## using Command\n\n다른 방법으로는 커맨드라인으로 설정을 추가해주는 방법이 있습니다.\n\nouter: inner: value\n\n위와 같은 표현식을 다음과 같이 표현할 수 있습니다.\n\n```\n$ --set outer.inner=value\n\n그럼 위 문제와 같은 경우는 다음과 같이 표현될 수 있습니다.\n\n$ helm install monitor stable/prometheus --set alertmanager.persistentVolume.enabled=false --set\n  server.persistentVolume.enabled=false --set pushgateway.persistentVolume.enabled=false\n\npod들이 정상적으로 Running되었으니 웹으로 접속해봅시다.\n$ kubectl get svc\n```\n\n## Reference\n\n[helm으로 프로메테우스 설치](https://tommypagy.tistory.com/187)\n"},"html":"<p><img src=\"./images/%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4%20%ED%86%B5%ED%95%A9%EB%A1%9C%EA%B7%B8%20%ED%99%98%EA%B2%BD%EA%B5%AC%EC%B6%95.jpeg\" alt=\"쿠버네티스 통합로그 환경구축\"></p>\n<h1 id=\"쿠버네티스-통합로그-환경구축\" style=\"position:relative;\"><a href=\"#%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4-%ED%86%B5%ED%95%A9%EB%A1%9C%EA%B7%B8-%ED%99%98%EA%B2%BD%EA%B5%AC%EC%B6%95\" aria-label=\"쿠버네티스 통합로그 환경구축 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>쿠버네티스 통합로그 환경구축</h1>\n<h2 id=\"프로메테우스-설치\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EB%A9%94%ED%85%8C%EC%9A%B0%EC%8A%A4-%EC%84%A4%EC%B9%98\" aria-label=\"프로메테우스 설치 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로메테우스 설치</h2>\n<p>helm에 stable repo 추가</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">helm repo <span class=\"token function\">add</span> stable https://charts.helm.sh/stable</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">helm search repo stable</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">helm repo update</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">helm <span class=\"token function\">install</span> monitor stable/prometheus</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 삭제</span>\nhelm uninstall stable/prometheus</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 내부구성보기</span>\nhelm inspect values stable/prometheus</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl get pod</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl get svc</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># ClusterIP를 NodePort로 변경</span>\nkubectl edit svc monitor-prometheus-server</code></pre></div>\n<p><img src=\"./images/Clipboard_2021-10-06-11-38-53.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"install-했지만-pod가-pending상태일-때\" style=\"position:relative;\"><a href=\"#install-%ED%96%88%EC%A7%80%EB%A7%8C-pod%EA%B0%80-pending%EC%83%81%ED%83%9C%EC%9D%BC-%EB%95%8C\" aria-label=\"install 했지만 pod가 pending상태일 때 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>install 했지만 pod가 pending상태일 때</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ kubectl get pod</code></pre></div>\n<p><img src=\"./images/Clipboard_2021-10-06-11-57-01.png\" alt=\"\"></p>\n<p>몇 개의 pod이<strong>Pending</strong>상태입니다.</p>\n<p>이유는 k8s클러스터에 StorageClass가 정의되어있지 않기 때문입니다.\n(pvc의 요청을 받아줄 provisioner가 없기 때문)</p>\n<p>그래서 일단 pv옵션을 false로 변경해주어 EmptyDir을 사용하게 해야 합니다.</p>\n<p>Helm chart의 설정을 변경하는 방법은 크게 두가지 방법이 있습니다.</p>\n<h2 id=\"using-yaml\" style=\"position:relative;\"><a href=\"#using-yaml\" aria-label=\"using yaml permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>using yaml</h2>\n<p>문제가 되는 chart를 먼저 확인해봅시다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ helm inspect values stable/prometheus</code></pre></div>\n<p><img src=\"./images/Clipboard_2021-10-06-11-57-21.png\" alt=\"\"></p>\n<p>persistentVolume.enabled가True입니다. 이렇게 표기되어있는 부분이 총 세군데가 있습니다.</p>\n<p>수정할 부분만 따로 파일을 만들어주면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ vim volumeF.yaml\nalertmanager: persistentVolume: enabled: false server: persistentVolume: enabled: false pushgateway:\npersistentVolume: enabled: false\n\n업그레이드해줍시다.\n\n$ helm upgrade -f volumeF.yaml monitor stable/prometheus\n\n업그레이드 하게되면 Pending이었던 pod들이 Running상태로 변하는 것을 확인할 수 있습니다.</code></pre></div>\n<p><img src=\"./images/Clipboard_2021-10-06-11-57-44.png\" alt=\"\"></p>\n<h2 id=\"using-command\" style=\"position:relative;\"><a href=\"#using-command\" aria-label=\"using command permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>using Command</h2>\n<p>다른 방법으로는 커맨드라인으로 설정을 추가해주는 방법이 있습니다.</p>\n<p>outer: inner: value</p>\n<p>위와 같은 표현식을 다음과 같이 표현할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ --set outer.inner=value\n\n그럼 위 문제와 같은 경우는 다음과 같이 표현될 수 있습니다.\n\n$ helm install monitor stable/prometheus --set alertmanager.persistentVolume.enabled=false --set\n  server.persistentVolume.enabled=false --set pushgateway.persistentVolume.enabled=false\n\npod들이 정상적으로 Running되었으니 웹으로 접속해봅시다.\n$ kubectl get svc</code></pre></div>\n<h2 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<p><a href=\"https://tommypagy.tistory.com/187\">helm으로 프로메테우스 설치</a></p>"},{"frontmatter":{"tags":["자바스크립트","웹개발"],"title":"모달 이외부분 클릭시 창 닫힘"},"internal":{"content":"\n![모달](./images/modal.png)\n\n# 모달 이외부분 클릭시 창 닫힘 코드\n\n```js\nimport React, { useEffect } from \"react\"\nimport toothImg from \"../../images/artificial.png\"\n\nexport default ({ setModalOnOff }) => {\n  useEffect(() => {\n    var model_wrap = document.getElementById(\"model_wrap\")\n    var modal = document.getElementById(\"modal\")\n\n    model_wrap.addEventListener(\n      \"click\",\n      function () {\n        setModalOnOff(false)\n        // alert('wrapper');\n      },\n      false\n    )\n    modal.addEventListener(\n      \"click\",\n      function (ev) {\n        ev.stopPropagation() // 이 부분이 가장 중요함, 이걸로 인해서 모달 이외의 부분만 클릭했을 때 모달 창이 꺼지는 효과를 만들 수 있음\n      },\n      false\n    )\n  }, [])\n  return (\n    <div\n      id=\"model_wrap\"\n      style={{\n        display: \"table\",\n        backgroundColor: \"rgba(0,0,0,0.7)\",\n        width: \"100vw\",\n        height: \"100vh\",\n        position: \"absolute\",\n        zIndex: 900,\n      }}\n    >\n      <div\n        id=\"modal\"\n        style={{\n          backgroundColor: \"#181818\",\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          width: \"70vw\",\n          height: \"70vh\",\n          marginTop: \"-35vh\",\n          marginLeft: \"-35vw\",\n          color: \"white\",\n          zIndex: 9999,\n        }}\n      >\n        <h1 style={{ fontSize: \"80px\" }}>Select Image</h1>\n        <img src={toothImg} width=\"400px\" height=\"300px\" />\n      </div>\n    </div>\n  )\n}\n```\n"},"html":"<p><img src=\"./images/modal.png\" alt=\"모달\"></p>\n<h1 id=\"모달-이외부분-클릭시-창-닫힘-코드\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%8B%AC-%EC%9D%B4%EC%99%B8%EB%B6%80%EB%B6%84-%ED%81%B4%EB%A6%AD%EC%8B%9C-%EC%B0%BD-%EB%8B%AB%ED%9E%98-%EC%BD%94%EB%93%9C\" aria-label=\"모달 이외부분 클릭시 창 닫힘 코드 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모달 이외부분 클릭시 창 닫힘 코드</h1>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> toothImg <span class=\"token keyword\">from</span> <span class=\"token string\">\"../../images/artificial.png\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> setModalOnOff <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> model_wrap <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"model_wrap\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">var</span> modal <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"modal\"</span><span class=\"token punctuation\">)</span>\n\n    model_wrap<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setModalOnOff</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// alert('wrapper');</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">)</span>\n    modal<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        ev<span class=\"token punctuation\">.</span><span class=\"token function\">stopPropagation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 이 부분이 가장 중요함, 이걸로 인해서 모달 이외의 부분만 클릭했을 때 모달 창이 꺼지는 효과를 만들 수 있음</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div\n      id<span class=\"token operator\">=</span><span class=\"token string\">\"model_wrap\"</span>\n      style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n        display<span class=\"token operator\">:</span> <span class=\"token string\">\"table\"</span><span class=\"token punctuation\">,</span>\n        backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">\"rgba(0,0,0,0.7)\"</span><span class=\"token punctuation\">,</span>\n        width<span class=\"token operator\">:</span> <span class=\"token string\">\"100vw\"</span><span class=\"token punctuation\">,</span>\n        height<span class=\"token operator\">:</span> <span class=\"token string\">\"100vh\"</span><span class=\"token punctuation\">,</span>\n        position<span class=\"token operator\">:</span> <span class=\"token string\">\"absolute\"</span><span class=\"token punctuation\">,</span>\n        zIndex<span class=\"token operator\">:</span> <span class=\"token number\">900</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div\n        id<span class=\"token operator\">=</span><span class=\"token string\">\"modal\"</span>\n        style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n          backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">\"#181818\"</span><span class=\"token punctuation\">,</span>\n          position<span class=\"token operator\">:</span> <span class=\"token string\">\"absolute\"</span><span class=\"token punctuation\">,</span>\n          top<span class=\"token operator\">:</span> <span class=\"token string\">\"50%\"</span><span class=\"token punctuation\">,</span>\n          left<span class=\"token operator\">:</span> <span class=\"token string\">\"50%\"</span><span class=\"token punctuation\">,</span>\n          width<span class=\"token operator\">:</span> <span class=\"token string\">\"70vw\"</span><span class=\"token punctuation\">,</span>\n          height<span class=\"token operator\">:</span> <span class=\"token string\">\"70vh\"</span><span class=\"token punctuation\">,</span>\n          marginTop<span class=\"token operator\">:</span> <span class=\"token string\">\"-35vh\"</span><span class=\"token punctuation\">,</span>\n          marginLeft<span class=\"token operator\">:</span> <span class=\"token string\">\"-35vw\"</span><span class=\"token punctuation\">,</span>\n          color<span class=\"token operator\">:</span> <span class=\"token string\">\"white\"</span><span class=\"token punctuation\">,</span>\n          zIndex<span class=\"token operator\">:</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>h1 style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> fontSize<span class=\"token operator\">:</span> <span class=\"token string\">\"80px\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Select Image<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>img src<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>toothImg<span class=\"token punctuation\">}</span> width<span class=\"token operator\">=</span><span class=\"token string\">\"400px\"</span> height<span class=\"token operator\">=</span><span class=\"token string\">\"300px\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>"},{"frontmatter":{"tags":["유튜브키"],"title":"유튜브처럼 랜덤id키 만들기"},"internal":{"content":"\n![youtube](./images/youtube.png)\n\n# 유튜브처럼 랜덤id키 만들기\n\n```js\nfunction makeId(length) {\n  let result = \"\"\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\"\n  const charactersLength = characters.length\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength))\n  }\n  return result\n}\n\nmakeId(11)\n```\n\n# Reference\n\n[유튜브 id 동작원리 영상](https://www.youtube.com/watch?v=gocwRvLhDf8)\n"},"html":"<p><img src=\"./images/youtube.png\" alt=\"youtube\"></p>\n<h1 id=\"유튜브처럼-랜덤id키-만들기\" style=\"position:relative;\"><a href=\"#%EC%9C%A0%ED%8A%9C%EB%B8%8C%EC%B2%98%EB%9F%BC-%EB%9E%9C%EB%8D%A4id%ED%82%A4-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"유튜브처럼 랜덤id키 만들기 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>유튜브처럼 랜덤id키 만들기</h1>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">makeId</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">length</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n  <span class=\"token keyword\">const</span> characters <span class=\"token operator\">=</span>\n    <span class=\"token string\">\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\"</span>\n  <span class=\"token keyword\">const</span> charactersLength <span class=\"token operator\">=</span> characters<span class=\"token punctuation\">.</span>length\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    result <span class=\"token operator\">+=</span> characters<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> charactersLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> result\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">makeId</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h1 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h1>\n<p><a href=\"https://www.youtube.com/watch?v=gocwRvLhDf8\">유튜브 id 동작원리 영상</a></p>"},{"frontmatter":{"tags":["삽질"],"title":"ag-grid삽질"},"internal":{"content":"\n![aggrid](./images/aggrid.jpeg)\n\n# ag-grid삽질\n\nonCellValueChanged 할 때는 값을 바로바로 수정할 수 있지만\n\ncellRenderer같은 곳에선 rowNode.setData로 해야할 줄 알았는데 메모리 누수가 생긴다.\n\n겨우겨우 알아낸게 props에서 바로 data로 접근할 수 있었다.\n\n```javascript\nconst f_addCard = () => {\n  rowNode.data.imageData = image\n\n  setIsImageModal(!isImageModal)\n}\n```\n\n여기서 rowNode는 props이다\n\n다시 한 번 알아낸것, 문제는 Modal이었다.  \n모달이 켜질 때 DataTableContainer는 unmount 되기 때문에 자꾸 메모리 누수 문제가 생겼던 것이었다.  \n이걸 해결하기 위해선 모달을 꺼줌과 동시에 값을 할당해주면 된다\n\n```javascript\nconst f_addCard = () => {\n  console.log(rowNode)\n\n  setIsImageModal(!isImageModal)\n  rowNode.node.setDataValue(\"imageData\", image)\n}\n```\n"},"html":"<p><img src=\"./images/aggrid.jpeg\" alt=\"aggrid\"></p>\n<h1 id=\"ag-grid삽질\" style=\"position:relative;\"><a href=\"#ag-grid%EC%82%BD%EC%A7%88\" aria-label=\"ag grid삽질 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ag-grid삽질</h1>\n<p>onCellValueChanged 할 때는 값을 바로바로 수정할 수 있지만</p>\n<p>cellRenderer같은 곳에선 rowNode.setData로 해야할 줄 알았는데 메모리 누수가 생긴다.</p>\n<p>겨우겨우 알아낸게 props에서 바로 data로 접근할 수 있었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">f_addCard</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  rowNode<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>imageData <span class=\"token operator\">=</span> image\n\n  <span class=\"token function\">setIsImageModal</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isImageModal<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>여기서 rowNode는 props이다</p>\n<p>다시 한 번 알아낸것, 문제는 Modal이었다.<br>\n모달이 켜질 때 DataTableContainer는 unmount 되기 때문에 자꾸 메모리 누수 문제가 생겼던 것이었다.<br>\n이걸 해결하기 위해선 모달을 꺼줌과 동시에 값을 할당해주면 된다</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">f_addCard</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>rowNode<span class=\"token punctuation\">)</span>\n\n  <span class=\"token function\">setIsImageModal</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isImageModal<span class=\"token punctuation\">)</span>\n  rowNode<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">setDataValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"imageData\"</span><span class=\"token punctuation\">,</span> image<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>"},{"frontmatter":{"tags":["비트&바이트 계산"],"title":"한페이지 C언어 자료형 크기 정리"},"internal":{"content":"\n![c_language](./images/c_language.png)\n\n# 한페이지 C언어 자료형 크기 정리\n\n8비트 == 1바이트\n\nchar 최소 8비트, 보통 8비트  \nshort 최소 16비트, 보통 16비트  \nint 최소 16비트, 보통 32비트  \nlong 최소 32비트, 보통 32비트, 64비트는 C89에는 없다  \nfloat char크기이상, 보통 32비트  \ndouble float크기이상, 보통 32비트  \nlong double double이상의 크기\n"},"html":"<p><img src=\"./images/c_language.png\" alt=\"c_language\"></p>\n<h1 id=\"한페이지-c언어-자료형-크기-정리\" style=\"position:relative;\"><a href=\"#%ED%95%9C%ED%8E%98%EC%9D%B4%EC%A7%80-c%EC%96%B8%EC%96%B4-%EC%9E%90%EB%A3%8C%ED%98%95-%ED%81%AC%EA%B8%B0-%EC%A0%95%EB%A6%AC\" aria-label=\"한페이지 c언어 자료형 크기 정리 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>한페이지 C언어 자료형 크기 정리</h1>\n<p>8비트 == 1바이트</p>\n<p>char 최소 8비트, 보통 8비트<br>\nshort 최소 16비트, 보통 16비트<br>\nint 최소 16비트, 보통 32비트<br>\nlong 최소 32비트, 보통 32비트, 64비트는 C89에는 없다<br>\nfloat char크기이상, 보통 32비트<br>\ndouble float크기이상, 보통 32비트<br>\nlong double double이상의 크기</p>"},{"frontmatter":{"tags":["부하테스트"],"title":"부하테스트"},"internal":{"content":"\n![jmeter](./images/jmeter.png)\n\n# 부하테스트\n\n## 설치\n\n```bash\nbrew install jmeter\n```\n\n```bash\nopen /usr/local/bin/jmeter\n```\n\n![](./images/Clipboard_2021-09-18-14-14-24.png)\n\n테스트 시 봐야할 것은 Load time으로 22는 22ms를 뜻한다\n\n## 지표의미\n\n![](./images/Clipboard_2021-09-18-14-21-44.png)\n\nSample: 접속수<br/>\nMin: 가장 빠르게 접속한 값<br/>\nMax: 가장 느리게 접속한 값<br/>\nAverage: 평균적으로 접속한 시간<br/>\nThroughput: 초당 접속한 횟수(높을수록 좋다, 에러가 발생한 경우는 물론 예외)<br/>\nError: 얼마나 에러가 발생하는지<br/>\nStd. Dev.: 표준편차(평균으로 부터 각각 요청하는 시간이 얼마나 떨어져 있는지), 이 값이 0이면 모두 평균과 똑같은 시간을 뜻하고, 이 값이 크다면 들쑥날쑥 하다는 뜻\n\n![](./images/Clipboard_2021-09-18-14-19-36.png)\n\nData: 실제 접속한 시간<br/>\nAverage: 평균값의 변화<br/>\nMedium: 중앙값<br/>\nDeviation: 편차(얼마나 평균으로 부터 떨어져 있는가 혹은 균일한가\b)<br/>\nThroughput: 초당 접속한 횟수(높을수록 좋다, 에러가 발생한 경우는 물론 예외)\n\n## Reference\n\n[velog](https://velog.io/@ehdrms2034/%EC%84%B1%EB%8A%A5-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EB%8F%84%EA%B5%AC-Apache-Jmeter-%EC%84%A4%EC%B9%98%EB%B6%80%ED%84%B0-%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%82%AC%EC%9A%A9%EA%B9%8C%EC%A7%80)\n\n[생활코딩](https://www.youtube.com/watch?v=1AyxqIePusA&ab_channel=%EC%83%9D%ED%99%9C%EC%BD%94%EB%94%A9)\n\n[JMeter와 Performance 테스트](https://story.stevenlab.io/207)\n\n[에러 우회 영상](PEu6sfC0F0P6Qg4l8JsEofRGmSeEKOLbgC8EsI4lKSKO162afgrQAfirk6PO7rWE)\n"},"html":"<p><img src=\"./images/jmeter.png\" alt=\"jmeter\"></p>\n<h1 id=\"부하테스트\" style=\"position:relative;\"><a href=\"#%EB%B6%80%ED%95%98%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"부하테스트 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>부하테스트</h1>\n<h2 id=\"설치\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%B9%98\" aria-label=\"설치 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설치</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">brew <span class=\"token function\">install</span> jmeter</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">open</span> /usr/local/bin/jmeter</code></pre></div>\n<p><img src=\"./images/Clipboard_2021-09-18-14-14-24.png\" alt=\"\"></p>\n<p>테스트 시 봐야할 것은 Load time으로 22는 22ms를 뜻한다</p>\n<h2 id=\"지표의미\" style=\"position:relative;\"><a href=\"#%EC%A7%80%ED%91%9C%EC%9D%98%EB%AF%B8\" aria-label=\"지표의미 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>지표의미</h2>\n<p><img src=\"./images/Clipboard_2021-09-18-14-21-44.png\" alt=\"\"></p>\n<p>Sample: 접속수<br/>\nMin: 가장 빠르게 접속한 값<br/>\nMax: 가장 느리게 접속한 값<br/>\nAverage: 평균적으로 접속한 시간<br/>\nThroughput: 초당 접속한 횟수(높을수록 좋다, 에러가 발생한 경우는 물론 예외)<br/>\nError: 얼마나 에러가 발생하는지<br/>\nStd. Dev.: 표준편차(평균으로 부터 각각 요청하는 시간이 얼마나 떨어져 있는지), 이 값이 0이면 모두 평균과 똑같은 시간을 뜻하고, 이 값이 크다면 들쑥날쑥 하다는 뜻</p>\n<p><img src=\"./images/Clipboard_2021-09-18-14-19-36.png\" alt=\"\"></p>\n<p>Data: 실제 접속한 시간<br/>\nAverage: 평균값의 변화<br/>\nMedium: 중앙값<br/>\nDeviation: 편차(얼마나 평균으로 부터 떨어져 있는가 혹은 균일한가\b)<br/>\nThroughput: 초당 접속한 횟수(높을수록 좋다, 에러가 발생한 경우는 물론 예외)</p>\n<h2 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<p><a href=\"https://velog.io/@ehdrms2034/%EC%84%B1%EB%8A%A5-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EB%8F%84%EA%B5%AC-Apache-Jmeter-%EC%84%A4%EC%B9%98%EB%B6%80%ED%84%B0-%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%82%AC%EC%9A%A9%EA%B9%8C%EC%A7%80\">velog</a></p>\n<p><a href=\"https://www.youtube.com/watch?v=1AyxqIePusA&#x26;ab_channel=%EC%83%9D%ED%99%9C%EC%BD%94%EB%94%A9\">생활코딩</a></p>\n<p><a href=\"https://story.stevenlab.io/207\">JMeter와 Performance 테스트</a></p>\n<p><a href=\"PEu6sfC0F0P6Qg4l8JsEofRGmSeEKOLbgC8EsI4lKSKO162afgrQAfirk6PO7rWE\">에러 우회 영상</a></p>"},{"frontmatter":{"tags":["리눅스","에러모음"],"title":"우분투 스테레오믹스 인식 불가 문제"},"internal":{"content":"\n# 우분투 스테레오믹스 인식 불가 문제\n\n![streo_mix](./images/stereo_mix.png)\n\nHDMI 케이블이 문제인 경우가 있다.\n\n이럴 경우 3.5파이 케이블을 사던가 집에 있는 다른 스피커를 인식시켜서 스테레오믹스를 사용하면 된다\n\n이 두가지 방법을 제외하고 너무 급하다 싶으면 곰녹음기를 사용하면 된다. 곰녹음기는 이 문제를 해결했다\n\n# Reference\n\n[https://purple-dia.tistory.com/230](https://purple-dia.tistory.com/230)\n"},"html":"<h1 id=\"우분투-스테레오믹스-인식-불가-문제\" style=\"position:relative;\"><a href=\"#%EC%9A%B0%EB%B6%84%ED%88%AC-%EC%8A%A4%ED%85%8C%EB%A0%88%EC%98%A4%EB%AF%B9%EC%8A%A4-%EC%9D%B8%EC%8B%9D-%EB%B6%88%EA%B0%80-%EB%AC%B8%EC%A0%9C\" aria-label=\"우분투 스테레오믹스 인식 불가 문제 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>우분투 스테레오믹스 인식 불가 문제</h1>\n<p><img src=\"./images/stereo_mix.png\" alt=\"streo_mix\"></p>\n<p>HDMI 케이블이 문제인 경우가 있다.</p>\n<p>이럴 경우 3.5파이 케이블을 사던가 집에 있는 다른 스피커를 인식시켜서 스테레오믹스를 사용하면 된다</p>\n<p>이 두가지 방법을 제외하고 너무 급하다 싶으면 곰녹음기를 사용하면 된다. 곰녹음기는 이 문제를 해결했다</p>\n<h1 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h1>\n<p><a href=\"https://purple-dia.tistory.com/230\">https://purple-dia.tistory.com/230</a></p>"},{"frontmatter":{"tags":["리눅스","에러모음"],"title":"우분투 Unable to lock the administration directory (/var/lib/dpkg/) is another process using it 에러"},"internal":{"content":"\n![terminal](./images/terminal.jpeg)\n\n# 우분투 Unable to lock the administration directory (/var/lib/dpkg/) is another process using it 에러\n\nFirst of all we should check what process created the lock file using `lsof`:\n\n```\nsudo lsof /var/lib/dpkg/lock\n\n```\n\nor in another situation where `/var/lib/apt/lists/lock` is problematic:\n\n```\nsudo lsof /var/lib/apt/lists/lock\n\n```\n\nThe output will be close to something like:\n\n```\nCOMMAND   PID USER   FD   TYPE DEVICE SIZE/OFF    NODE NAME\napt-get   12127 root   4uW  REG  252,1        0    86   /var/lib/apt/lists/lock\n\n```\n\nThen we should check what the commad is doing, we can find it out using `ps`, `pgrep` etc; the command is `apt-get` so I run:\n\n```\npgrep apt-get -a\n\n```\n\nThe `-a` switch lists the full command for me, in my case it's:\n\n```\n pgrep -a apt-get\n 12127 apt-get update\n\n```\n\nwe can see that it's running `update` subcommand, I could run something like this too:\n\n```\nps -f 12127\n\n```\n\nwhich produces:\n\n```\nUID        PID  PPID  C STIME TTY      STAT   TIME CMD\nroot     12127 12126  0 09:39 pts/0    S+     0:00 apt-get update\n\n```\n\nIn this case I would wait for some minute for resource to be freed and if after 2 or 3 minute problem still exist or the command was something that I didn't care about or was not harmful for system (like this `apt-get update`) I send a `SIGTERM` to the process:\n\n```\nsudo kill -15 12127\n\n```\n\nIt should do the work, If it didn't I'm going to send `SIGINT` this time (It's like pressing CTRL+C):\n\n```\nsudo kill -2 12127\n\n```\n\nIf it didn't work too, we should send an `SIGHUP` (`kill -1`), and finally if nothing works I simply kill the process:\n\n```\nsudo kill -9 12127\n\n```\n\nor\n\n```\nsudo pkill -9 apt-get\n\n```\n\nThen I remove busy resources:\n\n```\nsudo rm /var/lib/apt/lists/lock\n```\n"},"html":"<p><img src=\"./images/terminal.jpeg\" alt=\"terminal\"></p>\n<h1 id=\"우분투-unable-to-lock-the-administration-directory-varlibdpkg-is-another-process-using-it-에러\" style=\"position:relative;\"><a href=\"#%EC%9A%B0%EB%B6%84%ED%88%AC-unable-to-lock-the-administration-directory-varlibdpkg-is-another-process-using-it-%EC%97%90%EB%9F%AC\" aria-label=\"우분투 unable to lock the administration directory varlibdpkg is another process using it 에러 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>우분투 Unable to lock the administration directory (/var/lib/dpkg/) is another process using it 에러</h1>\n<p>First of all we should check what process created the lock file using <code class=\"language-text\">lsof</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo lsof /var/lib/dpkg/lock\n</code></pre></div>\n<p>or in another situation where <code class=\"language-text\">/var/lib/apt/lists/lock</code> is problematic:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo lsof /var/lib/apt/lists/lock\n</code></pre></div>\n<p>The output will be close to something like:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">COMMAND   PID USER   FD   TYPE DEVICE SIZE/OFF    NODE NAME\napt-get   12127 root   4uW  REG  252,1        0    86   /var/lib/apt/lists/lock\n</code></pre></div>\n<p>Then we should check what the commad is doing, we can find it out using <code class=\"language-text\">ps</code>, <code class=\"language-text\">pgrep</code> etc; the command is <code class=\"language-text\">apt-get</code> so I run:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pgrep apt-get -a\n</code></pre></div>\n<p>The <code class=\"language-text\">-a</code> switch lists the full command for me, in my case it's:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"> pgrep -a apt-get\n 12127 apt-get update\n</code></pre></div>\n<p>we can see that it's running <code class=\"language-text\">update</code> subcommand, I could run something like this too:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ps -f 12127\n</code></pre></div>\n<p>which produces:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">UID        PID  PPID  C STIME TTY      STAT   TIME CMD\nroot     12127 12126  0 09:39 pts/0    S+     0:00 apt-get update\n</code></pre></div>\n<p>In this case I would wait for some minute for resource to be freed and if after 2 or 3 minute problem still exist or the command was something that I didn't care about or was not harmful for system (like this <code class=\"language-text\">apt-get update</code>) I send a <code class=\"language-text\">SIGTERM</code> to the process:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo kill -15 12127\n</code></pre></div>\n<p>It should do the work, If it didn't I'm going to send <code class=\"language-text\">SIGINT</code> this time (It's like pressing CTRL+C):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo kill -2 12127\n</code></pre></div>\n<p>If it didn't work too, we should send an <code class=\"language-text\">SIGHUP</code> (<code class=\"language-text\">kill -1</code>), and finally if nothing works I simply kill the process:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo kill -9 12127\n</code></pre></div>\n<p>or</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo pkill -9 apt-get\n</code></pre></div>\n<p>Then I remove busy resources:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo rm /var/lib/apt/lists/lock</code></pre></div>"},{"frontmatter":{"tags":["데이터베이스"],"title":"phoenix docker compose예제"},"internal":{"content":"\n![phoenix](./images/phoenix.png)\n\n# phoenix docker compose\n\n```dockerfile\n# Version of docker-compose\nversion: '3'\n\n# Containers we are going to run\nservices:\n  # Our Phoenix container\n  phoenix:\n    # The build parameters for this container.\n    build:\n      # Here we define that it should build from the current directory\n      context: .\n    environment:\n      # Variables to connect to our Postgres server\n      PGUSER: postgres\n      PGPASSWORD: postgres\n      PGDATABASE: database_name\n      PGPORT: 5432\n      # Hostname of our Postgres container\n      PGHOST: db\n    ports:\n      # Mapping the port to make the Phoenix app accessible outside of the container\n      - \"4000:4000\"\n    depends_on:\n      # The db container needs to be started before we start this container\n      - db\n  db:\n    # We use the predefined Postgres image\n    image: postgres:9.6\n    environment:\n      # Set user/password for Postgres\n      POSTGRES_USER: postgres\n      POSTGRES_PASSWORD: postgres\n      # Set a path where Postgres should store the data\n      PGDATA: /var/lib/postgresql/data/pgdata\n    restart: always\n    volumes:\n      - pgdata:/var/lib/postgresql/data\n# Define the volumes\nvolumes:\n  pgdata:\n```\n\n## 참고자료\n\nhttps://pspdfkit.com/blog/2018/how-to-run-your-phoenix-application-with-docker/\n"},"html":"<p><img src=\"./images/phoenix.png\" alt=\"phoenix\"></p>\n<h1 id=\"phoenix-docker-compose\" style=\"position:relative;\"><a href=\"#phoenix-docker-compose\" aria-label=\"phoenix docker compose permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>phoenix docker compose</h1>\n<div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token comment\"># Version of docker-compose</span>\nversion: '3'\n\n<span class=\"token comment\"># Containers we are going to run</span>\nservices:\n  <span class=\"token comment\"># Our Phoenix container</span>\n  phoenix:\n    <span class=\"token comment\"># The build parameters for this container.</span>\n    build:\n      <span class=\"token comment\"># Here we define that it should build from the current directory</span>\n      context: .\n    environment:\n      <span class=\"token comment\"># Variables to connect to our Postgres server</span>\n      PGUSER: postgres\n      PGPASSWORD: postgres\n      PGDATABASE: database_name\n      PGPORT: 5432\n      <span class=\"token comment\"># Hostname of our Postgres container</span>\n      PGHOST: db\n    ports:\n      <span class=\"token comment\"># Mapping the port to make the Phoenix app accessible outside of the container</span>\n      - \"4000:4000\"\n    depends_on:\n      <span class=\"token comment\"># The db container needs to be started before we start this container</span>\n      - db\n  db:\n    <span class=\"token comment\"># We use the predefined Postgres image</span>\n    image: postgres:9.6\n    environment:\n      <span class=\"token comment\"># Set user/password for Postgres</span>\n      POSTGRES_USER: postgres\n      POSTGRES_PASSWORD: postgres\n      <span class=\"token comment\"># Set a path where Postgres should store the data</span>\n      PGDATA: /var/lib/postgresql/data/pgdata\n    restart: always\n    volumes:\n      - pgdata:/var/lib/postgresql/data\n<span class=\"token comment\"># Define the volumes</span>\nvolumes:\n  pgdata:</code></pre></div>\n<h2 id=\"참고자료\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C\" aria-label=\"참고자료 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고자료</h2>\n<p><a href=\"https://pspdfkit.com/blog/2018/how-to-run-your-phoenix-application-with-docker/\">https://pspdfkit.com/blog/2018/how-to-run-your-phoenix-application-with-docker/</a></p>"},{"frontmatter":{"tags":["다이나모디비","에러모음"],"title":"dynamodb 예약어 에러 & 빈 값 전달 에러"},"internal":{"content":"\n![dynamodb](./images/dynamodb.png)\n\n# 에러\n\n## 예약어 에러\n\n```bash\nAttribute name is a reserved keyword; reserved keyword\n```\n\ndynamodb 에서 이미 사용하고 있는 예약어로 `ExpressionAttributeNames`를 사용해서 해결할 수 있다.\n\n```js\nconst params = {\n  TableName: TABLE_NAME,\n  Key: {\n    username: username,\n  },\n  UpdateExpression: `SET decks[${deckIndex}].cards[${cardIndex}].#cycle = :cycle`,\n  ExpressionAttributeNames: {\n    \"#cycle\": \"cycle\",\n  },\n  ExpressionAttributeValues: {\n    // 수정할 것의 값을 정해줘야합니다.\n    \":cycle\": cycle,\n  },\n}\n```\n\n위 코드에서 cycle 은 예약어여서 cycle 앞에 #을 붙여주고 ExpressionAttributeNames 에서 #cycle 을 명시해주고 있다.\n\n## 빈 값 전달 에러\n\ndynamodb 로 값을 전달 할 때 빈 string 값을 전달하면 실행에러가 뜬다.\n\n# Reference\n\n[https://docs.aws.amazon.com/ko_kr/amazondynamodb/latest/developerguide/ReservedWords.html](https://docs.aws.amazon.com/ko_kr/amazondynamodb/latest/developerguide/ReservedWords.html)\n"},"html":"<p><img src=\"./images/dynamodb.png\" alt=\"dynamodb\"></p>\n<h1 id=\"에러\" style=\"position:relative;\"><a href=\"#%EC%97%90%EB%9F%AC\" aria-label=\"에러 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>에러</h1>\n<h2 id=\"예약어-에러\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%95%BD%EC%96%B4-%EC%97%90%EB%9F%AC\" aria-label=\"예약어 에러 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예약어 에러</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Attribute name is a reserved keyword<span class=\"token punctuation\">;</span> reserved keyword</code></pre></div>\n<p>dynamodb 에서 이미 사용하고 있는 예약어로 <code class=\"language-text\">ExpressionAttributeNames</code>를 사용해서 해결할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> params <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  TableName<span class=\"token operator\">:</span> <span class=\"token constant\">TABLE_NAME</span><span class=\"token punctuation\">,</span>\n  Key<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    username<span class=\"token operator\">:</span> username<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  UpdateExpression<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">SET decks[</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>deckIndex<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">].cards[</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>cardIndex<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">].#cycle = :cycle</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  ExpressionAttributeNames<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"#cycle\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cycle\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  ExpressionAttributeValues<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 수정할 것의 값을 정해줘야합니다.</span>\n    <span class=\"token string\">\":cycle\"</span><span class=\"token operator\">:</span> cycle<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위 코드에서 cycle 은 예약어여서 cycle 앞에 #을 붙여주고 ExpressionAttributeNames 에서 #cycle 을 명시해주고 있다.</p>\n<h2 id=\"빈-값-전달-에러\" style=\"position:relative;\"><a href=\"#%EB%B9%88-%EA%B0%92-%EC%A0%84%EB%8B%AC-%EC%97%90%EB%9F%AC\" aria-label=\"빈 값 전달 에러 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>빈 값 전달 에러</h2>\n<p>dynamodb 로 값을 전달 할 때 빈 string 값을 전달하면 실행에러가 뜬다.</p>\n<h1 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h1>\n<p><a href=\"https://docs.aws.amazon.com/ko_kr/amazondynamodb/latest/developerguide/ReservedWords.html\">https://docs.aws.amazon.com/ko_kr/amazondynamodb/latest/developerguide/ReservedWords.html</a></p>"},{"frontmatter":{"tags":["네트워크"],"title":"네트워크 기초 한방 정리"},"internal":{"content":"\n개발하다보면 네트워크와 관련된 부분이 나올 때마다 예전에 알았던거임에도 불구하고 항상 새롭게 느껴지고 막막하면서 스트레스가 몰려오는 느낌이 들었다.\n\n그럴 때 마다 예전 자료와 책을 들춰서 찾아보는데 신물이 나서 이곳에 총 정리할려고 한다.\n\n그렇다고 여기에 전부 있지는 않다.\n\n최대한 중요한것 위주, 키워드 위주로 정리할 것이다.\n\n# 네트워크 관리\n\n# IP 종류\n\n## IPv6(128 비트=2 의 128 승)\n\nIPv6 는 IPv4 로 이 세상에 모든 IP 가 충분하지 않았기에 나왔다.\n\n## IPv4(32 비트=2 의 32 승)\n\n### IP 주소란\n\n인터넷에 접속된 `모든 기기들을 식별하기 위한` 고유한 주소  \n점(.)을 기준으로 4 개의 옥텟(Octet)으로 구성  \n하나의 옥텟(Octet)은 8 비트  \n점(.)으로 구분된 4 개의 십진수\n\n## IPv4 를 IPv6 로 전환 기술\n\n- 듀얼스택(Dual Stack) - 호스트 또는 라우터의 IPv4 와 IPv6 프로토콜을 모두 수용할 수 있는 기술\n- 변환기술(Translation) - IPv4 망과 IPv6\n- 터널링(Tunneling) - IPv4 망에 터널을 만들어 IPv6 패킷을 통과시키는 개념\n\n# Calssful ip 범위\n\n약 43 억 개의 IP 주소는 A, B, C, D, E 클래스로 나뉘어 진다.\n\n실제 호스트에서 사용 가능한 클래스 `A, B, C`\n\n`사설 IP주소 === 내부 IP주소`\n\n<table>\n<tr><td>클래스</td><td>IP</td><td>서브넷 마스크</td><td>사설 IP</td></tr>\n<tr><td>A</td><td>0.0.0.0 ~ 127.255.255.255</td><td>255.0.0.0</td><td>10.0.0.0 ~ 10.255.255.255</td></tr>\n<tr><td>B</td><td>128.0.0.0 ~ 191.255.255.255</td><td>255.255.0.0</td><td>172.16.0.0 ~ 172.31.255.255</td></tr>\n<tr><td>C</td><td>192.0.0.0 ~ 223.255.255.255</td><td>255.255.255.0</td><td>192.168.0.0 ~ 192.168.255.255</td></tr>\n<tr><td>D</td><td>224.0.0.0 ~ 239.255.255.255</td><td colspan=2>멀티캐스트 주소로 사용함</td></tr>\n<tr><td>E</td><td>240.0.0.0 ~ 255.255.255.255</td><td colspan=2>테스트 용도로 사용됨</td></tr>\n</table>\n사설IP는 공인IP와 부딪힐일이 없으므로 어떤 클래스든 10~ 172~ 192.168~ 맘대로 입력하는 사람이 마음 대로 정할 수 있는데, 공식적으로 정해놓은 사설 IP 대역은 위의 나온대로이다.\n\n이렇게 나뉘어진 IP 주소는 다시 클래스마다 네트워크 단위로 나뉘어진다.  \n`IP대역`에는 `반드시 하나의 네트워크ID`와 `브로드캐스트IP`가 `존재`한다.\n`시작하는 IP === 네트워크 ID`\n`마지막 IP === 브로드캐스트 IP`\n\n## A Class\n\n<table>\n<tr><td>네트워크 ID</td><td>호스트 ID</td><td>브로드캐스트IP</td></tr>\n<tr><td>0.0.0.0</td><td>0.0.0.0 ~ 0.255.255.254</td><td>0.255.255.255</td></tr>\n<tr><td>1.0.0.0</td><td>1.0.0.1 ~ 1.255.255.254</td><td>1.255.255.255</td></tr>\n<tr><td>2.0.0.0</td><td>2.0.0.1 ~ 2.255.255.254</td><td>2.255.255.255</td></tr>\n<tr><td colspan=3> - 중간생략 - </td></tr>\n<tr><td>127.0.0.0</td><td>127.0.0.1 ~ 127.255.255.254</td><td>127.255.255.255</td></tr>\n</table>\n\n## B Class\n\n<table>\n<tr><td>네트워크 ID</td><td>호스트 ID</td><td>브로드캐스트IP</td></tr>\n<tr><td>128.0.0.0</td><td>128.0.0.0 ~ 128.0.255.254</td><td>128.255.255.255</td></tr>\n<tr><td>129.0.0.0</td><td>129.0.0.1 ~ 129.0.255.254</td><td>129.255.255.255</td></tr>\n<tr><td>130.0.0.0</td><td>130.0.0.1 ~ 130.0.255.254</td><td>130.255.255.255</td></tr>\n<tr><td colspan=3> - 중간생략 - </td></tr>\n<tr><td>191.255.0.0</td><td>191.255.0.1 ~ 191.255.255.254</td><td>191.255.255.255</td></tr>\n</table>\n\n## C Class\n\n<table>\n<tr><td>네트워크 ID</td><td>호스트 ID</td><td>브로드캐스트IP</td></tr>\n<tr><td>192.0.0.0</td><td>192.0.0.0 ~ 192.0.0.254</td><td>192.0.0.255</td></tr>\n<tr><td>193.0.0.0</td><td>193.0.0.1 ~ 193.0.0.254</td><td>193.0.0.255</td></tr>\n<tr><td>194.0.0.0</td><td>194.0.0.1 ~ 194.0.0.254</td><td>194.0.0.255</td></tr>\n<tr><td colspan=3> - 중간생략 - </td></tr>\n<tr><td>223.255.255.0</td><td>223.255.255.1 ~ 223.255.255.254</td><td>223.255.255.255</td></tr>\n</table>\n\n브로드캐스트는 같은 IP 대역에 메시지를 전달한다.\n\n잘 보면 `네트워크 ID` 부분은 `서브넷의 앞부분(255인곳)`이고  \n`호스트 ID 와 브로드캐스트 IP` 는 `서브넷의 뒤부분(0인곳)`이다.\n\b※ 서브넷은 255 와 0 뿐만이 아닌 1(2^0) - 1, 2(2^1) - 1, 4(2^2) - 1, 8(2^3) - 1, 16(2^4) - 1, 32(2^5) - 1, 64(2^6) - 1, 128(2^7) - 1, 256(2^8) - 1 이 될 수도 있다.\n\n## Subnet Mask 표\n\nSubnet이란 결국 network를 위한 mask이기 때문에 네트워크 단위를 표기한거라고 생각하면 되고 2^32에서 네트워크 단위 만큼을 뺀게 호스트 수 라고 생각하면 편하다.\n\n<table>\n<tr><td>Prefix</td><td>Subnet Mask</td><td>Host 수</td><td>해당클라스</td></tr>\n<tr><td>/8</td><td>255.0.0.0</td><td>2^24 - 1</td><td>A Class Default Subnet Mask</td></tr>\n<tr><td>/9</td><td>255.128.0.0</td><td>2^23</td><td>A Class Subnet Mask</td></tr>\n<tr><td>/10</td><td>255.192.0.0</td><td>2^22</td><td>A Class Subnet Mask</td></tr>\n<tr><td>/11</td><td>255.224.0.0</td><td>2^21</td><td>A Class Subnet Mask</td></tr>\n<tr><td>/12</td><td>255.240.0.0</td><td>2^20</td><td>A Class Subnet Mask</td></tr>\n<tr><td>/13</td><td>255.248.0.0</td><td>2^19</td><td>A Class Subnet Mask</td></tr>\n<tr><td>/14</td><td>255.252.0.0</td><td>2^18</td><td>A Class Subnet Mask</td></tr>\n<tr><td>/15</td><td>255.254.0.0</td><td>2^17</td><td>A Class Subnet Mask</td></tr>\n<tr><td>/16</td><td>255.255.0.0</td><td>2^16</td><td>B Class Default Subnet Mask</td></tr>\n<tr><td>/17</td><td>255.255.128.0</td><td>2^15</td><td>B Class Subnet Mask</td></tr>\n<tr><td>/18</td><td>255.255.192.0</td><td>2^14</td><td>B Class Subnet Mask</td></tr>\n<tr><td>/19</td><td>255.255.224.0</td><td>2^13</td><td>B Class Subnet Mask</td></tr>\n<tr><td>/20</td><td>255.255.240.0</td><td>2^12</td><td>B Class Subnet Mask</td></tr>\n<tr><td>/21</td><td>255.255.248.0</td><td>2^11</td><td>B Class Subnet Mask</td></tr>\n<tr><td>/22</td><td>255.255.252.0</td><td>2^10</td><td>B Class Subnet Mask</td></tr>\n<tr><td>/23</td><td>255.255.254.0</td><td>2^9</td><td>B Class Subnet Mask</td></tr>\n<tr><td>/24</td><td>255.255.255.0</td><td>2^8</td><td>C Class Default Subnet Mask</td></tr>\n<tr><td>/25</td><td>255.255.255.128</td><td>2^7</td><td>C Class Subnet Mask</td></tr>\n<tr><td>/26</td><td>255.255.255.192</td><td>2^6</td><td>C Class Subnet Mask</td></tr>\n<tr><td>/27</td><td>255.255.255.224</td><td>2^5</td><td>C Class Subnet Mask</td></tr>\n<tr><td>/28</td><td>255.255.255.240</td><td>2^4</td><td>C Class Subnet Mask</td></tr>\n<tr><td>/29</td><td>255.255.255.248</td><td>2^3</td><td>C Class Subnet Mask</td></tr>\n<tr><td>/30</td><td>255.255.255.252</td><td>2^2</td><td>C Class Subnet Mask</td></tr>\n<tr><td>/31</td><td>255.255.255.254</td><td>2^1</td><td>C Class Subnet Mask</td></tr>\n<tr><td>/32</td><td>255.255.255.255</td><td>2^0</td><td>C Class Subnet Mask</td></tr>\n</table>\n\n이제 위 서브넷 마스크를 보면 호스트를 계산 할 수 있다.\n\n255.255.255.255 - Subnet Mask = Result 값\nResult 값 + 1 = host 수\n\n참고로 여기서 Result 값을 다른말도 `와일드카드`라고 할 수 있다.\n\nex) 서브넷마스크가 255.255.0.0 이라면 와일드카드는 0.0.255.255 이다.\n\n255.255.255.255 - 와일드 카드 = 서브넷마스크 이다.\n\n# 루프백 IP 범위\n\n127.0.0.0 ~ 127.255.255.255  \n일반적으로 127.0.0.1 을 사용한다.\n\n# 네트워크 ID 계산\n\n## 서브넷이란\n\n서브넷 마스크의 형태는 IP 주소와 똑같이 32bit 의 2 진수로 되어 있으며, 8bit(1byte)마다 '.(dot)'으로 구분하고 있습니다. 즉, IP 와 똑같은 OOO.OOO.OOO.OOO 의 모습을 가지고 있습니다. 그러나 형태가 똑같다고 하여서 역할을 혼동하시면 안 됩니다. `형태가 똑같은 이유는 IP주소와 서브넷 마스크를 AND 연산하기 위해서`입니다.\n\nIP 주소와 서브넷 마스크를 AND 연산하면 네트워크 ID 가 나온다.\n![스크린샷 2019-09-17 오후 9.38.55](./images/network1.png)\n\n## 서브넷 마스크를 사용하는 이유\n\n`브로드캐스트 영역(네트워크)`를 나누기 위함 입니다.\n\n한 네트워크에 수 많은 호스트가 있을 경우 원활한 통신이 불가능해지게 됩니다. 이를 해결하기 위해서 네트워크를 적절하게 나누어 주셔야 합니다. 또한 네트워크를 적절하게 구분지어주기 때문에 IP 주소를 아끼는 효과가 있습니다.\n\n# Network ID & 사용가능한 Host IP & Broadcast IP\n\n아래는 서브넷이 255.255.255.0 이고 C class 의 예제사진 이다.\n![스크린샷 2019-09-18 오전 12.25.47](./images/network2.png)\n\nNetworkID `1개`\nBroadcast IP `1개`\n서브넷에 따라 `사용가능한 Host IP수 === 2^8(256개)`\n실제 사용가능한 IP 수 = 256 - 1(네트워크ID) - 1(브로드캐스트주소) - 1(게이트웨이주소) = `253`\nAWS에서 실제 사용가능한 IP 수 = 251개 로 위의 3개를 뺴고도 3개가 더 예약되어 있다, ex)VPC기능 혹은 DNS 자세히는 모른다.\n\n# 서브넷팅 연습 문제\n\n다음의 IP 와 프리픽스가 주어졌을 때 서브넷 ID, 브로드캐스트주소, 서브넷마스크 및 사용 가능한 호스트 IP 를 모두 10 진수로 작성한다.\n\n**1. 192.168.0.128/25**  \n서브넷 ID:  \n호스트 IP 범위:  \n브로드캐스트 IP:  \n서브넷마스크:\n\n**2. 192.168.100.3/30**  \n서브넷 ID:  \n호스트 IP 범위:  \n브로드캐스트 IP:  \n서브넷마스크:\n\n**3. 49.192.0.0/13**  \n서브넷 ID:  \n호스트 IP 범위:  \n브로드캐스트 IP:  \n서브넷마스크:\n\n**1 번 풀이**\n![스크린샷 2019-09-18 오후 2.17.15](./images/network3.png)\n\n**2 번 풀이**\n![스크린샷 2019-09-18 오후 2.17.22](./images/network4.png)\n\n**3 번 풀이**\n\n![스크린샷 2019-09-18 오후 2.17.25](./images/network5.png)\n\n# Gateway 란\n\n## 게이트웨이의 역할\n\n같은 네트워크 내에서는 게이트웨이 주소 없이 IP 주소와 서브넷마스크만 호스트에 설정하여 허브나 스위치를 통해서도 서로 통신이 가능하다.\n\n**반변에** 다른 네트워간에 통신을 할려면 게이트웨이가 필요하다.\n\n게이트웨이 장비로 라우터, 각종보안장비 등이 있고 가정에 있는 공유기도 게이트웨이의 역할을 한다.\n\n`게이트웨이 = 라우터 = 공유기`\n\n## 게이트웨이 IP 주소 범위\n\n게이트웨이 IP 주소로는 네트워크대역 ID, 브로드캐스트 IP 빼고 전부할 당 가능하지만 대부분 주로 호스트 IP 중 첫번째 또는 마지막 IP 를 사용한다.\n\n## 게이트웨이를 배울 때 헷갈리는 점\n\n나는 예전에 게이트웨이란 걸 배울 때 포트와 많이 헷갈리곤 했는데 그 이유가 사람들이 표현하는 방식이 똑같이 이걸 문이라고 표현했기 때문이다.\n\n그래서 나는 이걸 다시 정의 해봤다.\n\n어떤 큰 궁전이 있다고 했을 때 궁전의 출입문을 게이트웨이, 궁전안에 있는 각각의 집을 컴퓨터 하나하나, 각각의 집안에 있는 문을 포트라고 생각했다.  \n이렇게 이미지화 하는게 정확한지는 모르겠지만 나에게는 이게 가장 직관적으로 와닿는 이미지인 듯하다.\n\n두번째로 내가 게이트웨이를 나를 가장 혼란스럽게 한 이미지 자료가 있어서 이다.\n\n![스크린샷 2019-09-18 오후 1.50.20](./images/network6.png)\n\n나는 이 그림을 보고 컴퓨터의 IP 가 게이트웨이의 IP 주소가 같을 수 있는건가? 의구심을 가졌다.  \n그래서 겨우겨우 수십번의 검색을 통해서 아래와 같은 결과를 찾을 수 있었다.\n\n<div class=\"citeBlockQuote\">\n  <blockquote cite=\"어디선가 펌\">  \n  커뮤터가 서로 통신하기 위해서는 모든 컴퓨터마다 유일한 IP 주소를 할당해야 하듯, 게이웨이에도 중복되지 않는 IP주소가 피료합니다.\n  이 IP 주소를 토대로 각 컴퓨터가 다른 네트워크와 연결됩니다.\n  </blockquote>\n</div>\n\n결론은 저 위에 나온 이미지가 틀렸다는 결론이 나온다.  \n나는 이 이미지를 어떤 책에서 봤기 때문에 더욱 혼란스러웠다.  \n보통 책은 교정과정을 통해 출판하기 때문이다.  \n여러분들 중 위와 같은 그림을 발견했다면 오류가 있다고 생각하면 된다.\n\n# DHCP 의 좋은점\n\nDHCP 는 IP 를 자동으로 할당 해주는데 IP 가 부족한 경우 적절히 조절하게 할 수 있다.\n\n# NAT(Network Address Translation)\n\n사설 IP 를 외부 접속을 위해 NAT 기능을 통해 `공인 IP 로 변경`해서 통신하게 해준다.\n\n라우터는 NAT 기능을 가지고 있으며 IP 변환정보 관리를 위해 NAT Table 을 유지한다.\n\n## NAT 의 효과\n\n- 사설 IP 를 사용할 수 있게 됨으로써 IP 를 절약\n- 변환된 IP 를 사용하기 때문에 자신의 IP 를 외부로 노출 하지 않아도 되어 보안성을 높일 수 있다.\n\n## NAT 동작방식\n\n- Static NAT - 1:1 변환방식, 사설 IP 하나 공인 IP 하나\n- Dynamic NAT - N:M 변환방식, 지정한 대역의 사설 IP 들을 여러개의 공인 IP 로 순차 매핑\n- PAT(Port Address Transation) - N:1 방식, 공인 IP 하나 사설 IP 여러개\n\n# VMWare 가상네트워크\n\nVMware 를 설치하면 다음과 같은 장치가 추가 된다.\n\n`VMware Network Adapter VMnet1 - Host-Only`\n`VMware Network Adapter VMnet8 - NAT`\n\n잘 외울려면 VMNet8 은 8 의 윗부분 0 과 아랫부분 0 을 나눠서, 한 쪽 네트워크와 다른 쪽 네트워크와 연결된다고 이미지화해서 외우면 쉽다.\n\n`기존에 있던 이더넷은 Bridge 와 연결된다.` 이 말인 즉슨 Bridge 는 같은 네트워크 대역이 컴퓨터가 옆에 하나 복사 됬다고 생각하면 된다.\n\nNAT 을 선택해서 설치하게 되면 가상의 내부 컴퓨터 에서 외부 접속은 되지만 외부 컴퓨터에서 가상 내부 컴퓨터로는 접속이 안된다.\n\n`VMnet1 에는 Gateway 를 설정해주지 않는다.`  \n따라서 가상 컴퓨터를 이용해 외부 접속이 되지 않는다, 반대로 외부 컴퓨터도 가상 컴퓨터로 접속이 되지 않는다.\n실제 자기 컴퓨터와는 통신이 된다.\n\n# 방화벽 만들기\n\n## 전체적인 구상도\n\n![스크린샷 2019-09-22 오전 7.30.13](./images/network7.png)\n\n## 어댑터 설정\n\nCentOS 방화벽 가상 머신(Bridged, NAT, Host-only) 설치\n\n```bash\n# ip address확인\nip addr\n```\n\n> 127.0.0.1 루프백만 부여되 있음\n\n```bash\n# Bridged, NAT, Host-only 들의 어댑터 이름 확인\ndmesg | grep eth\n```\n\n> renamed network interface eth0 to [어댑터 이름]\n> renamed network interface eth1 to [어댑터 이름]\n> renamed network interface eth2 to [어댑터 이름]\n\ndmesg: 커널 메시지 또는 부팅 메시지 확인\ngrep: 문자열 검색\n\n```bash\n# 어댑터를 올리고 ip 확인\nifup [어댑터이름]\n\nip addr\n```\n\n> 192.168.0.xxx/24\n\n```bash\n# ssh는 리눅스에서 기본적으로 os설치시 ssh서비스가 같이 설치되고, 부팅시 기본적으로 실행 된다.\n# ssh서비스 동작하는지 확인,\nps -ef | grep ssh\n```\n\n이제 putty 로 위의 ip 를 입력하고 22 번포트(ssh)로 접속한다.\n\n```bash\n# 네트워크 명령어 패키지 확인\nyum list net-tools\n\n# 네트워크 유틸 설치\nyum -y install net-tools\n```\n\n```bash\n# 어댑터 정보 확인\nifconfig [어댑터이름]\n\n# LISTEN하고 있는 port확인\nnetstat -lnt\n\n# 방화벽 설정 패키지 확인\nyum list system-config-firewall-tui\n\n# 방화벽 유틸 설치\nyum -y install system-config-firewall-tui\n```\n\n## Network Interface Card(NIC)이름 변경\n\n이더넷 이름이 직관적으로 보기에 길어서 변경해줄 필요가 있다. ex) eth0 : eno16777728\n\n```bash\n# MAC주소 확인\nifconfig\n```\n\n> ether 00:0c:29:fc:27:07\n> ether [mac 주소]\n> ether [mac 주소]\n\n```bash\n# NIC이름을 변경하기 위해 다음 파일 편집\nvi /etc/udev/rules.d/99-rename-to-eth0.rules\n\n# 아래 설정을 입력하고 저장\nSUBSYSTEM==\"net\", ACTION==\"add\", DRIVERS==\"?*\", ATTR{address}==\"[00:0c:29:fc:27:07]\", ATTR{type}==\"1\", KERNEL=\"eth*\", NAME=\"eth0\"\nSUBSYSTEM==\"net\", ACTION==\"add\", DRIVERS==\"?*\", ATTR{address}==\"[Mac주소]\", ATTR{type}==\"1\", KERNEL=\"eth*\", NAME=\"eth1\"\nSUBSYSTEM==\"net\", ACTION==\"add\", DRIVERS==\"?*\", ATTR{address}==\"[Mac주소]\", ATTR{type}==\"1\", KERNEL=\"eth*\", NAME=\"eth2\"\n\n# 재부팅\ninit 6\n```\n\nifconfig 를 해보면 NIC 이름이 변경되어 있다.\n"},"html":"<p>개발하다보면 네트워크와 관련된 부분이 나올 때마다 예전에 알았던거임에도 불구하고 항상 새롭게 느껴지고 막막하면서 스트레스가 몰려오는 느낌이 들었다.</p>\n<p>그럴 때 마다 예전 자료와 책을 들춰서 찾아보는데 신물이 나서 이곳에 총 정리할려고 한다.</p>\n<p>그렇다고 여기에 전부 있지는 않다.</p>\n<p>최대한 중요한것 위주, 키워드 위주로 정리할 것이다.</p>\n<h1 id=\"네트워크-관리\" style=\"position:relative;\"><a href=\"#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EA%B4%80%EB%A6%AC\" aria-label=\"네트워크 관리 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>네트워크 관리</h1>\n<h1 id=\"ip-종류\" style=\"position:relative;\"><a href=\"#ip-%EC%A2%85%EB%A5%98\" aria-label=\"ip 종류 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IP 종류</h1>\n<h2 id=\"ipv6128-비트2-의-128-승\" style=\"position:relative;\"><a href=\"#ipv6128-%EB%B9%84%ED%8A%B82-%EC%9D%98-128-%EC%8A%B9\" aria-label=\"ipv6128 비트2 의 128 승 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IPv6(128 비트=2 의 128 승)</h2>\n<p>IPv6 는 IPv4 로 이 세상에 모든 IP 가 충분하지 않았기에 나왔다.</p>\n<h2 id=\"ipv432-비트2-의-32-승\" style=\"position:relative;\"><a href=\"#ipv432-%EB%B9%84%ED%8A%B82-%EC%9D%98-32-%EC%8A%B9\" aria-label=\"ipv432 비트2 의 32 승 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IPv4(32 비트=2 의 32 승)</h2>\n<h3 id=\"ip-주소란\" style=\"position:relative;\"><a href=\"#ip-%EC%A3%BC%EC%86%8C%EB%9E%80\" aria-label=\"ip 주소란 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IP 주소란</h3>\n<p>인터넷에 접속된 <code class=\"language-text\">모든 기기들을 식별하기 위한</code> 고유한 주소<br>\n점(.)을 기준으로 4 개의 옥텟(Octet)으로 구성<br>\n하나의 옥텟(Octet)은 8 비트<br>\n점(.)으로 구분된 4 개의 십진수</p>\n<h2 id=\"ipv4-를-ipv6-로-전환-기술\" style=\"position:relative;\"><a href=\"#ipv4-%EB%A5%BC-ipv6-%EB%A1%9C-%EC%A0%84%ED%99%98-%EA%B8%B0%EC%88%A0\" aria-label=\"ipv4 를 ipv6 로 전환 기술 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IPv4 를 IPv6 로 전환 기술</h2>\n<ul>\n<li>듀얼스택(Dual Stack) - 호스트 또는 라우터의 IPv4 와 IPv6 프로토콜을 모두 수용할 수 있는 기술</li>\n<li>변환기술(Translation) - IPv4 망과 IPv6</li>\n<li>터널링(Tunneling) - IPv4 망에 터널을 만들어 IPv6 패킷을 통과시키는 개념</li>\n</ul>\n<h1 id=\"calssful-ip-범위\" style=\"position:relative;\"><a href=\"#calssful-ip-%EB%B2%94%EC%9C%84\" aria-label=\"calssful ip 범위 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Calssful ip 범위</h1>\n<p>약 43 억 개의 IP 주소는 A, B, C, D, E 클래스로 나뉘어 진다.</p>\n<p>실제 호스트에서 사용 가능한 클래스 <code class=\"language-text\">A, B, C</code></p>\n<p><code class=\"language-text\">사설 IP주소 === 내부 IP주소</code></p>\n<table>\n<tr><td>클래스</td><td>IP</td><td>서브넷 마스크</td><td>사설 IP</td></tr>\n<tr><td>A</td><td>0.0.0.0 ~ 127.255.255.255</td><td>255.0.0.0</td><td>10.0.0.0 ~ 10.255.255.255</td></tr>\n<tr><td>B</td><td>128.0.0.0 ~ 191.255.255.255</td><td>255.255.0.0</td><td>172.16.0.0 ~ 172.31.255.255</td></tr>\n<tr><td>C</td><td>192.0.0.0 ~ 223.255.255.255</td><td>255.255.255.0</td><td>192.168.0.0 ~ 192.168.255.255</td></tr>\n<tr><td>D</td><td>224.0.0.0 ~ 239.255.255.255</td><td colspan=2>멀티캐스트 주소로 사용함</td></tr>\n<tr><td>E</td><td>240.0.0.0 ~ 255.255.255.255</td><td colspan=2>테스트 용도로 사용됨</td></tr>\n</table>\n사설IP는 공인IP와 부딪힐일이 없으므로 어떤 클래스든 10~ 172~ 192.168~ 맘대로 입력하는 사람이 마음 대로 정할 수 있는데, 공식적으로 정해놓은 사설 IP 대역은 위의 나온대로이다.\n<p>이렇게 나뉘어진 IP 주소는 다시 클래스마다 네트워크 단위로 나뉘어진다.<br>\n<code class=\"language-text\">IP대역</code>에는 <code class=\"language-text\">반드시 하나의 네트워크ID</code>와 <code class=\"language-text\">브로드캐스트IP</code>가 <code class=\"language-text\">존재</code>한다.\n<code class=\"language-text\">시작하는 IP === 네트워크 ID</code>\n<code class=\"language-text\">마지막 IP === 브로드캐스트 IP</code></p>\n<h2 id=\"a-class\" style=\"position:relative;\"><a href=\"#a-class\" aria-label=\"a class permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>A Class</h2>\n<table>\n<tr><td>네트워크 ID</td><td>호스트 ID</td><td>브로드캐스트IP</td></tr>\n<tr><td>0.0.0.0</td><td>0.0.0.0 ~ 0.255.255.254</td><td>0.255.255.255</td></tr>\n<tr><td>1.0.0.0</td><td>1.0.0.1 ~ 1.255.255.254</td><td>1.255.255.255</td></tr>\n<tr><td>2.0.0.0</td><td>2.0.0.1 ~ 2.255.255.254</td><td>2.255.255.255</td></tr>\n<tr><td colspan=3> - 중간생략 - </td></tr>\n<tr><td>127.0.0.0</td><td>127.0.0.1 ~ 127.255.255.254</td><td>127.255.255.255</td></tr>\n</table>\n<h2 id=\"b-class\" style=\"position:relative;\"><a href=\"#b-class\" aria-label=\"b class permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>B Class</h2>\n<table>\n<tr><td>네트워크 ID</td><td>호스트 ID</td><td>브로드캐스트IP</td></tr>\n<tr><td>128.0.0.0</td><td>128.0.0.0 ~ 128.0.255.254</td><td>128.255.255.255</td></tr>\n<tr><td>129.0.0.0</td><td>129.0.0.1 ~ 129.0.255.254</td><td>129.255.255.255</td></tr>\n<tr><td>130.0.0.0</td><td>130.0.0.1 ~ 130.0.255.254</td><td>130.255.255.255</td></tr>\n<tr><td colspan=3> - 중간생략 - </td></tr>\n<tr><td>191.255.0.0</td><td>191.255.0.1 ~ 191.255.255.254</td><td>191.255.255.255</td></tr>\n</table>\n<h2 id=\"c-class\" style=\"position:relative;\"><a href=\"#c-class\" aria-label=\"c class permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>C Class</h2>\n<table>\n<tr><td>네트워크 ID</td><td>호스트 ID</td><td>브로드캐스트IP</td></tr>\n<tr><td>192.0.0.0</td><td>192.0.0.0 ~ 192.0.0.254</td><td>192.0.0.255</td></tr>\n<tr><td>193.0.0.0</td><td>193.0.0.1 ~ 193.0.0.254</td><td>193.0.0.255</td></tr>\n<tr><td>194.0.0.0</td><td>194.0.0.1 ~ 194.0.0.254</td><td>194.0.0.255</td></tr>\n<tr><td colspan=3> - 중간생략 - </td></tr>\n<tr><td>223.255.255.0</td><td>223.255.255.1 ~ 223.255.255.254</td><td>223.255.255.255</td></tr>\n</table>\n<p>브로드캐스트는 같은 IP 대역에 메시지를 전달한다.</p>\n<p>잘 보면 <code class=\"language-text\">네트워크 ID</code> 부분은 <code class=\"language-text\">서브넷의 앞부분(255인곳)</code>이고<br>\n<code class=\"language-text\">호스트 ID 와 브로드캐스트 IP</code> 는 <code class=\"language-text\">서브넷의 뒤부분(0인곳)</code>이다.\n\b※ 서브넷은 255 와 0 뿐만이 아닌 1(2^0) - 1, 2(2^1) - 1, 4(2^2) - 1, 8(2^3) - 1, 16(2^4) - 1, 32(2^5) - 1, 64(2^6) - 1, 128(2^7) - 1, 256(2^8) - 1 이 될 수도 있다.</p>\n<h2 id=\"subnet-mask-표\" style=\"position:relative;\"><a href=\"#subnet-mask-%ED%91%9C\" aria-label=\"subnet mask 표 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Subnet Mask 표</h2>\n<p>Subnet이란 결국 network를 위한 mask이기 때문에 네트워크 단위를 표기한거라고 생각하면 되고 2^32에서 네트워크 단위 만큼을 뺀게 호스트 수 라고 생각하면 편하다.</p>\n<table>\n<tr><td>Prefix</td><td>Subnet Mask</td><td>Host 수</td><td>해당클라스</td></tr>\n<tr><td>/8</td><td>255.0.0.0</td><td>2^24 - 1</td><td>A Class Default Subnet Mask</td></tr>\n<tr><td>/9</td><td>255.128.0.0</td><td>2^23</td><td>A Class Subnet Mask</td></tr>\n<tr><td>/10</td><td>255.192.0.0</td><td>2^22</td><td>A Class Subnet Mask</td></tr>\n<tr><td>/11</td><td>255.224.0.0</td><td>2^21</td><td>A Class Subnet Mask</td></tr>\n<tr><td>/12</td><td>255.240.0.0</td><td>2^20</td><td>A Class Subnet Mask</td></tr>\n<tr><td>/13</td><td>255.248.0.0</td><td>2^19</td><td>A Class Subnet Mask</td></tr>\n<tr><td>/14</td><td>255.252.0.0</td><td>2^18</td><td>A Class Subnet Mask</td></tr>\n<tr><td>/15</td><td>255.254.0.0</td><td>2^17</td><td>A Class Subnet Mask</td></tr>\n<tr><td>/16</td><td>255.255.0.0</td><td>2^16</td><td>B Class Default Subnet Mask</td></tr>\n<tr><td>/17</td><td>255.255.128.0</td><td>2^15</td><td>B Class Subnet Mask</td></tr>\n<tr><td>/18</td><td>255.255.192.0</td><td>2^14</td><td>B Class Subnet Mask</td></tr>\n<tr><td>/19</td><td>255.255.224.0</td><td>2^13</td><td>B Class Subnet Mask</td></tr>\n<tr><td>/20</td><td>255.255.240.0</td><td>2^12</td><td>B Class Subnet Mask</td></tr>\n<tr><td>/21</td><td>255.255.248.0</td><td>2^11</td><td>B Class Subnet Mask</td></tr>\n<tr><td>/22</td><td>255.255.252.0</td><td>2^10</td><td>B Class Subnet Mask</td></tr>\n<tr><td>/23</td><td>255.255.254.0</td><td>2^9</td><td>B Class Subnet Mask</td></tr>\n<tr><td>/24</td><td>255.255.255.0</td><td>2^8</td><td>C Class Default Subnet Mask</td></tr>\n<tr><td>/25</td><td>255.255.255.128</td><td>2^7</td><td>C Class Subnet Mask</td></tr>\n<tr><td>/26</td><td>255.255.255.192</td><td>2^6</td><td>C Class Subnet Mask</td></tr>\n<tr><td>/27</td><td>255.255.255.224</td><td>2^5</td><td>C Class Subnet Mask</td></tr>\n<tr><td>/28</td><td>255.255.255.240</td><td>2^4</td><td>C Class Subnet Mask</td></tr>\n<tr><td>/29</td><td>255.255.255.248</td><td>2^3</td><td>C Class Subnet Mask</td></tr>\n<tr><td>/30</td><td>255.255.255.252</td><td>2^2</td><td>C Class Subnet Mask</td></tr>\n<tr><td>/31</td><td>255.255.255.254</td><td>2^1</td><td>C Class Subnet Mask</td></tr>\n<tr><td>/32</td><td>255.255.255.255</td><td>2^0</td><td>C Class Subnet Mask</td></tr>\n</table>\n<p>이제 위 서브넷 마스크를 보면 호스트를 계산 할 수 있다.</p>\n<p>255.255.255.255 - Subnet Mask = Result 값\nResult 값 + 1 = host 수</p>\n<p>참고로 여기서 Result 값을 다른말도 <code class=\"language-text\">와일드카드</code>라고 할 수 있다.</p>\n<p>ex) 서브넷마스크가 255.255.0.0 이라면 와일드카드는 0.0.255.255 이다.</p>\n<p>255.255.255.255 - 와일드 카드 = 서브넷마스크 이다.</p>\n<h1 id=\"루프백-ip-범위\" style=\"position:relative;\"><a href=\"#%EB%A3%A8%ED%94%84%EB%B0%B1-ip-%EB%B2%94%EC%9C%84\" aria-label=\"루프백 ip 범위 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>루프백 IP 범위</h1>\n<p>127.0.0.0 ~ 127.255.255.255<br>\n일반적으로 127.0.0.1 을 사용한다.</p>\n<h1 id=\"네트워크-id-계산\" style=\"position:relative;\"><a href=\"#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-id-%EA%B3%84%EC%82%B0\" aria-label=\"네트워크 id 계산 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>네트워크 ID 계산</h1>\n<h2 id=\"서브넷이란\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B8%8C%EB%84%B7%EC%9D%B4%EB%9E%80\" aria-label=\"서브넷이란 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서브넷이란</h2>\n<p>서브넷 마스크의 형태는 IP 주소와 똑같이 32bit 의 2 진수로 되어 있으며, 8bit(1byte)마다 '.(dot)'으로 구분하고 있습니다. 즉, IP 와 똑같은 OOO.OOO.OOO.OOO 의 모습을 가지고 있습니다. 그러나 형태가 똑같다고 하여서 역할을 혼동하시면 안 됩니다. <code class=\"language-text\">형태가 똑같은 이유는 IP주소와 서브넷 마스크를 AND 연산하기 위해서</code>입니다.</p>\n<p>IP 주소와 서브넷 마스크를 AND 연산하면 네트워크 ID 가 나온다.\n<img src=\"./images/network1.png\" alt=\"스크린샷 2019-09-17 오후 9.38.55\"></p>\n<h2 id=\"서브넷-마스크를-사용하는-이유\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B8%8C%EB%84%B7-%EB%A7%88%EC%8A%A4%ED%81%AC%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\" aria-label=\"서브넷 마스크를 사용하는 이유 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서브넷 마스크를 사용하는 이유</h2>\n<p><code class=\"language-text\">브로드캐스트 영역(네트워크)</code>를 나누기 위함 입니다.</p>\n<p>한 네트워크에 수 많은 호스트가 있을 경우 원활한 통신이 불가능해지게 됩니다. 이를 해결하기 위해서 네트워크를 적절하게 나누어 주셔야 합니다. 또한 네트워크를 적절하게 구분지어주기 때문에 IP 주소를 아끼는 효과가 있습니다.</p>\n<h1 id=\"network-id--사용가능한-host-ip--broadcast-ip\" style=\"position:relative;\"><a href=\"#network-id--%EC%82%AC%EC%9A%A9%EA%B0%80%EB%8A%A5%ED%95%9C-host-ip--broadcast-ip\" aria-label=\"network id  사용가능한 host ip  broadcast ip permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Network ID &#x26; 사용가능한 Host IP &#x26; Broadcast IP</h1>\n<p>아래는 서브넷이 255.255.255.0 이고 C class 의 예제사진 이다.\n<img src=\"./images/network2.png\" alt=\"스크린샷 2019-09-18 오전 12.25.47\"></p>\n<p>NetworkID <code class=\"language-text\">1개</code>\nBroadcast IP <code class=\"language-text\">1개</code>\n서브넷에 따라 <code class=\"language-text\">사용가능한 Host IP수 === 2^8(256개)</code>\n실제 사용가능한 IP 수 = 256 - 1(네트워크ID) - 1(브로드캐스트주소) - 1(게이트웨이주소) = <code class=\"language-text\">253</code>\nAWS에서 실제 사용가능한 IP 수 = 251개 로 위의 3개를 뺴고도 3개가 더 예약되어 있다, ex)VPC기능 혹은 DNS 자세히는 모른다.</p>\n<h1 id=\"서브넷팅-연습-문제\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B8%8C%EB%84%B7%ED%8C%85-%EC%97%B0%EC%8A%B5-%EB%AC%B8%EC%A0%9C\" aria-label=\"서브넷팅 연습 문제 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서브넷팅 연습 문제</h1>\n<p>다음의 IP 와 프리픽스가 주어졌을 때 서브넷 ID, 브로드캐스트주소, 서브넷마스크 및 사용 가능한 호스트 IP 를 모두 10 진수로 작성한다.</p>\n<p><strong>1. 192.168.0.128/25</strong><br>\n서브넷 ID:<br>\n호스트 IP 범위:<br>\n브로드캐스트 IP:<br>\n서브넷마스크:</p>\n<p><strong>2. 192.168.100.3/30</strong><br>\n서브넷 ID:<br>\n호스트 IP 범위:<br>\n브로드캐스트 IP:<br>\n서브넷마스크:</p>\n<p><strong>3. 49.192.0.0/13</strong><br>\n서브넷 ID:<br>\n호스트 IP 범위:<br>\n브로드캐스트 IP:<br>\n서브넷마스크:</p>\n<p><strong>1 번 풀이</strong>\n<img src=\"./images/network3.png\" alt=\"스크린샷 2019-09-18 오후 2.17.15\"></p>\n<p><strong>2 번 풀이</strong>\n<img src=\"./images/network4.png\" alt=\"스크린샷 2019-09-18 오후 2.17.22\"></p>\n<p><strong>3 번 풀이</strong></p>\n<p><img src=\"./images/network5.png\" alt=\"스크린샷 2019-09-18 오후 2.17.25\"></p>\n<h1 id=\"gateway-란\" style=\"position:relative;\"><a href=\"#gateway-%EB%9E%80\" aria-label=\"gateway 란 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gateway 란</h1>\n<h2 id=\"게이트웨이의-역할\" style=\"position:relative;\"><a href=\"#%EA%B2%8C%EC%9D%B4%ED%8A%B8%EC%9B%A8%EC%9D%B4%EC%9D%98-%EC%97%AD%ED%95%A0\" aria-label=\"게이트웨이의 역할 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>게이트웨이의 역할</h2>\n<p>같은 네트워크 내에서는 게이트웨이 주소 없이 IP 주소와 서브넷마스크만 호스트에 설정하여 허브나 스위치를 통해서도 서로 통신이 가능하다.</p>\n<p><strong>반변에</strong> 다른 네트워간에 통신을 할려면 게이트웨이가 필요하다.</p>\n<p>게이트웨이 장비로 라우터, 각종보안장비 등이 있고 가정에 있는 공유기도 게이트웨이의 역할을 한다.</p>\n<p><code class=\"language-text\">게이트웨이 = 라우터 = 공유기</code></p>\n<h2 id=\"게이트웨이-ip-주소-범위\" style=\"position:relative;\"><a href=\"#%EA%B2%8C%EC%9D%B4%ED%8A%B8%EC%9B%A8%EC%9D%B4-ip-%EC%A3%BC%EC%86%8C-%EB%B2%94%EC%9C%84\" aria-label=\"게이트웨이 ip 주소 범위 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>게이트웨이 IP 주소 범위</h2>\n<p>게이트웨이 IP 주소로는 네트워크대역 ID, 브로드캐스트 IP 빼고 전부할 당 가능하지만 대부분 주로 호스트 IP 중 첫번째 또는 마지막 IP 를 사용한다.</p>\n<h2 id=\"게이트웨이를-배울-때-헷갈리는-점\" style=\"position:relative;\"><a href=\"#%EA%B2%8C%EC%9D%B4%ED%8A%B8%EC%9B%A8%EC%9D%B4%EB%A5%BC-%EB%B0%B0%EC%9A%B8-%EB%95%8C-%ED%97%B7%EA%B0%88%EB%A6%AC%EB%8A%94-%EC%A0%90\" aria-label=\"게이트웨이를 배울 때 헷갈리는 점 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>게이트웨이를 배울 때 헷갈리는 점</h2>\n<p>나는 예전에 게이트웨이란 걸 배울 때 포트와 많이 헷갈리곤 했는데 그 이유가 사람들이 표현하는 방식이 똑같이 이걸 문이라고 표현했기 때문이다.</p>\n<p>그래서 나는 이걸 다시 정의 해봤다.</p>\n<p>어떤 큰 궁전이 있다고 했을 때 궁전의 출입문을 게이트웨이, 궁전안에 있는 각각의 집을 컴퓨터 하나하나, 각각의 집안에 있는 문을 포트라고 생각했다.<br>\n이렇게 이미지화 하는게 정확한지는 모르겠지만 나에게는 이게 가장 직관적으로 와닿는 이미지인 듯하다.</p>\n<p>두번째로 내가 게이트웨이를 나를 가장 혼란스럽게 한 이미지 자료가 있어서 이다.</p>\n<p><img src=\"./images/network6.png\" alt=\"스크린샷 2019-09-18 오후 1.50.20\"></p>\n<p>나는 이 그림을 보고 컴퓨터의 IP 가 게이트웨이의 IP 주소가 같을 수 있는건가? 의구심을 가졌다.<br>\n그래서 겨우겨우 수십번의 검색을 통해서 아래와 같은 결과를 찾을 수 있었다.</p>\n<div class=\"citeBlockQuote\">\n  <blockquote cite=\"어디선가 펌\">  \n  커뮤터가 서로 통신하기 위해서는 모든 컴퓨터마다 유일한 IP 주소를 할당해야 하듯, 게이웨이에도 중복되지 않는 IP주소가 피료합니다.\n  이 IP 주소를 토대로 각 컴퓨터가 다른 네트워크와 연결됩니다.\n  </blockquote>\n</div>\n<p>결론은 저 위에 나온 이미지가 틀렸다는 결론이 나온다.<br>\n나는 이 이미지를 어떤 책에서 봤기 때문에 더욱 혼란스러웠다.<br>\n보통 책은 교정과정을 통해 출판하기 때문이다.<br>\n여러분들 중 위와 같은 그림을 발견했다면 오류가 있다고 생각하면 된다.</p>\n<h1 id=\"dhcp-의-좋은점\" style=\"position:relative;\"><a href=\"#dhcp-%EC%9D%98-%EC%A2%8B%EC%9D%80%EC%A0%90\" aria-label=\"dhcp 의 좋은점 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DHCP 의 좋은점</h1>\n<p>DHCP 는 IP 를 자동으로 할당 해주는데 IP 가 부족한 경우 적절히 조절하게 할 수 있다.</p>\n<h1 id=\"natnetwork-address-translation\" style=\"position:relative;\"><a href=\"#natnetwork-address-translation\" aria-label=\"natnetwork address translation permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NAT(Network Address Translation)</h1>\n<p>사설 IP 를 외부 접속을 위해 NAT 기능을 통해 <code class=\"language-text\">공인 IP 로 변경</code>해서 통신하게 해준다.</p>\n<p>라우터는 NAT 기능을 가지고 있으며 IP 변환정보 관리를 위해 NAT Table 을 유지한다.</p>\n<h2 id=\"nat-의-효과\" style=\"position:relative;\"><a href=\"#nat-%EC%9D%98-%ED%9A%A8%EA%B3%BC\" aria-label=\"nat 의 효과 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NAT 의 효과</h2>\n<ul>\n<li>사설 IP 를 사용할 수 있게 됨으로써 IP 를 절약</li>\n<li>변환된 IP 를 사용하기 때문에 자신의 IP 를 외부로 노출 하지 않아도 되어 보안성을 높일 수 있다.</li>\n</ul>\n<h2 id=\"nat-동작방식\" style=\"position:relative;\"><a href=\"#nat-%EB%8F%99%EC%9E%91%EB%B0%A9%EC%8B%9D\" aria-label=\"nat 동작방식 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NAT 동작방식</h2>\n<ul>\n<li>Static NAT - 1:1 변환방식, 사설 IP 하나 공인 IP 하나</li>\n<li>Dynamic NAT - N:M 변환방식, 지정한 대역의 사설 IP 들을 여러개의 공인 IP 로 순차 매핑</li>\n<li>PAT(Port Address Transation) - N:1 방식, 공인 IP 하나 사설 IP 여러개</li>\n</ul>\n<h1 id=\"vmware-가상네트워크\" style=\"position:relative;\"><a href=\"#vmware-%EA%B0%80%EC%83%81%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC\" aria-label=\"vmware 가상네트워크 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VMWare 가상네트워크</h1>\n<p>VMware 를 설치하면 다음과 같은 장치가 추가 된다.</p>\n<p><code class=\"language-text\">VMware Network Adapter VMnet1 - Host-Only</code>\n<code class=\"language-text\">VMware Network Adapter VMnet8 - NAT</code></p>\n<p>잘 외울려면 VMNet8 은 8 의 윗부분 0 과 아랫부분 0 을 나눠서, 한 쪽 네트워크와 다른 쪽 네트워크와 연결된다고 이미지화해서 외우면 쉽다.</p>\n<p><code class=\"language-text\">기존에 있던 이더넷은 Bridge 와 연결된다.</code> 이 말인 즉슨 Bridge 는 같은 네트워크 대역이 컴퓨터가 옆에 하나 복사 됬다고 생각하면 된다.</p>\n<p>NAT 을 선택해서 설치하게 되면 가상의 내부 컴퓨터 에서 외부 접속은 되지만 외부 컴퓨터에서 가상 내부 컴퓨터로는 접속이 안된다.</p>\n<p><code class=\"language-text\">VMnet1 에는 Gateway 를 설정해주지 않는다.</code><br>\n따라서 가상 컴퓨터를 이용해 외부 접속이 되지 않는다, 반대로 외부 컴퓨터도 가상 컴퓨터로 접속이 되지 않는다.\n실제 자기 컴퓨터와는 통신이 된다.</p>\n<h1 id=\"방화벽-만들기\" style=\"position:relative;\"><a href=\"#%EB%B0%A9%ED%99%94%EB%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"방화벽 만들기 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>방화벽 만들기</h1>\n<h2 id=\"전체적인-구상도\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%B2%B4%EC%A0%81%EC%9D%B8-%EA%B5%AC%EC%83%81%EB%8F%84\" aria-label=\"전체적인 구상도 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전체적인 구상도</h2>\n<p><img src=\"./images/network7.png\" alt=\"스크린샷 2019-09-22 오전 7.30.13\"></p>\n<h2 id=\"어댑터-설정\" style=\"position:relative;\"><a href=\"#%EC%96%B4%EB%8C%91%ED%84%B0-%EC%84%A4%EC%A0%95\" aria-label=\"어댑터 설정 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>어댑터 설정</h2>\n<p>CentOS 방화벽 가상 머신(Bridged, NAT, Host-only) 설치</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># ip address확인</span>\n<span class=\"token function\">ip</span> addr</code></pre></div>\n<blockquote>\n<p>127.0.0.1 루프백만 부여되 있음</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Bridged, NAT, Host-only 들의 어댑터 이름 확인</span>\n<span class=\"token function\">dmesg</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> eth</code></pre></div>\n<blockquote>\n<p>renamed network interface eth0 to [어댑터 이름]\nrenamed network interface eth1 to [어댑터 이름]\nrenamed network interface eth2 to [어댑터 이름]</p>\n</blockquote>\n<p>dmesg: 커널 메시지 또는 부팅 메시지 확인\ngrep: 문자열 검색</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 어댑터를 올리고 ip 확인</span>\n<span class=\"token function\">ifup</span> <span class=\"token punctuation\">[</span>어댑터이름<span class=\"token punctuation\">]</span>\n\n<span class=\"token function\">ip</span> addr</code></pre></div>\n<blockquote>\n<p>192.168.0.xxx/24</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># ssh는 리눅스에서 기본적으로 os설치시 ssh서비스가 같이 설치되고, 부팅시 기본적으로 실행 된다.</span>\n<span class=\"token comment\"># ssh서비스 동작하는지 확인,</span>\n<span class=\"token function\">ps</span> -ef <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token function\">ssh</span></code></pre></div>\n<p>이제 putty 로 위의 ip 를 입력하고 22 번포트(ssh)로 접속한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 네트워크 명령어 패키지 확인</span>\nyum list net-tools\n\n<span class=\"token comment\"># 네트워크 유틸 설치</span>\nyum -y <span class=\"token function\">install</span> net-tools</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 어댑터 정보 확인</span>\n<span class=\"token function\">ifconfig</span> <span class=\"token punctuation\">[</span>어댑터이름<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># LISTEN하고 있는 port확인</span>\n<span class=\"token function\">netstat</span> -lnt\n\n<span class=\"token comment\"># 방화벽 설정 패키지 확인</span>\nyum list system-config-firewall-tui\n\n<span class=\"token comment\"># 방화벽 유틸 설치</span>\nyum -y <span class=\"token function\">install</span> system-config-firewall-tui</code></pre></div>\n<h2 id=\"network-interface-cardnic이름-변경\" style=\"position:relative;\"><a href=\"#network-interface-cardnic%EC%9D%B4%EB%A6%84-%EB%B3%80%EA%B2%BD\" aria-label=\"network interface cardnic이름 변경 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Network Interface Card(NIC)이름 변경</h2>\n<p>이더넷 이름이 직관적으로 보기에 길어서 변경해줄 필요가 있다. ex) eth0 : eno16777728</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># MAC주소 확인</span>\n<span class=\"token function\">ifconfig</span></code></pre></div>\n<blockquote>\n<p>ether 00:0c:29:fc:27:07\nether [mac 주소]\nether [mac 주소]</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># NIC이름을 변경하기 위해 다음 파일 편집</span>\n<span class=\"token function\">vi</span> /etc/udev/rules.d/99-rename-to-eth0.rules\n\n<span class=\"token comment\"># 아래 설정을 입력하고 저장</span>\n<span class=\"token assign-left variable\">SUBSYSTEM</span><span class=\"token operator\">==</span><span class=\"token string\">\"net\"</span>, <span class=\"token assign-left variable\">ACTION</span><span class=\"token operator\">==</span><span class=\"token string\">\"add\"</span>, <span class=\"token assign-left variable\">DRIVERS</span><span class=\"token operator\">==</span><span class=\"token string\">\"?*\"</span>, ATTR<span class=\"token punctuation\">{</span>address<span class=\"token punctuation\">}</span><span class=\"token operator\">==</span><span class=\"token string\">\"[00:0c:29:fc:27:07]\"</span>, ATTR<span class=\"token punctuation\">{</span>type<span class=\"token punctuation\">}</span><span class=\"token operator\">==</span><span class=\"token string\">\"1\"</span>, <span class=\"token assign-left variable\">KERNEL</span><span class=\"token operator\">=</span><span class=\"token string\">\"eth*\"</span>, <span class=\"token assign-left variable\">NAME</span><span class=\"token operator\">=</span><span class=\"token string\">\"eth0\"</span>\n<span class=\"token assign-left variable\">SUBSYSTEM</span><span class=\"token operator\">==</span><span class=\"token string\">\"net\"</span>, <span class=\"token assign-left variable\">ACTION</span><span class=\"token operator\">==</span><span class=\"token string\">\"add\"</span>, <span class=\"token assign-left variable\">DRIVERS</span><span class=\"token operator\">==</span><span class=\"token string\">\"?*\"</span>, ATTR<span class=\"token punctuation\">{</span>address<span class=\"token punctuation\">}</span><span class=\"token operator\">==</span><span class=\"token string\">\"[Mac주소]\"</span>, ATTR<span class=\"token punctuation\">{</span>type<span class=\"token punctuation\">}</span><span class=\"token operator\">==</span><span class=\"token string\">\"1\"</span>, <span class=\"token assign-left variable\">KERNEL</span><span class=\"token operator\">=</span><span class=\"token string\">\"eth*\"</span>, <span class=\"token assign-left variable\">NAME</span><span class=\"token operator\">=</span><span class=\"token string\">\"eth1\"</span>\n<span class=\"token assign-left variable\">SUBSYSTEM</span><span class=\"token operator\">==</span><span class=\"token string\">\"net\"</span>, <span class=\"token assign-left variable\">ACTION</span><span class=\"token operator\">==</span><span class=\"token string\">\"add\"</span>, <span class=\"token assign-left variable\">DRIVERS</span><span class=\"token operator\">==</span><span class=\"token string\">\"?*\"</span>, ATTR<span class=\"token punctuation\">{</span>address<span class=\"token punctuation\">}</span><span class=\"token operator\">==</span><span class=\"token string\">\"[Mac주소]\"</span>, ATTR<span class=\"token punctuation\">{</span>type<span class=\"token punctuation\">}</span><span class=\"token operator\">==</span><span class=\"token string\">\"1\"</span>, <span class=\"token assign-left variable\">KERNEL</span><span class=\"token operator\">=</span><span class=\"token string\">\"eth*\"</span>, <span class=\"token assign-left variable\">NAME</span><span class=\"token operator\">=</span><span class=\"token string\">\"eth2\"</span>\n\n<span class=\"token comment\"># 재부팅</span>\ninit <span class=\"token number\">6</span></code></pre></div>\n<p>ifconfig 를 해보면 NIC 이름이 변경되어 있다.</p>"},{"frontmatter":{"tags":["개발 개념정리"],"title":"버젼 개념"},"internal":{"content":"\n![버젼](./images/version_image.png)\n\n# 버젼 개념\n\n## 버전(Version)을 제대로 이해하기\n\n**Q. 1.3과 1.12 중 어느 버전이 더 최신 버전인가요?**\n**A. 1.12가 더 최신버전입니다.**\n\n위의 같은 질문류를 커뮤니티에서 본 적이 있는데 놀랍게도 1.3을 1.12보다 더 높은 버전으로 생각하는 사람이 많은 것 같았다. 그래서 이번에는 버전 번호를 제대로 이해하는 방법을 한번 써 볼까 한다.\n\n**Version 정리**\n\n버전 번호는 점(dot)으로 구분되며 순서대로 다음과 같은 식의 구조를 가지고 있다.\n\n**Major Version . Minor Version . Build or Maintenance Version**\n\n이게 일반적인 정의지만 정석은 아니다. 실제로 버전 번호는 3자리 이상도 사용 하기도 한다.\n\n일단 여기서는 설명을 위해 3자리를 기준으로 이렇게 표현하겠다.\n\n**Release Number . Major Number . Minor Number**\n\n- Release Number: 1로 시작해서 전체를 뒤엎을 정도로 큰 변화가 발생했을 때 이 수치를 올린다. (영화 속편이 나오면 2편 혹은 투(two)이라는 이름을 붙이듯 말이다.)\n- Major Number: 0으로 시작해서 주요 기능의 추가나 변경 등 사용상 혹은 컨텐츠의 주요 변화가 발생했을 때 1혹은 무작위로 증가한다. 간혹 알파벳이 붙기도 하는데 예를 들어 Beta(테스트버전)의 경우 b를 숫자 뒤에 붙이는 경향이 있다.\n- Minor Number: 0으로 시작해서 버그 수정 등 미미한 변화가 발생하면 1씩 혹은 무작위로 증가한다. 역시 개발사 정책에 따라 특정 알파벳이 붙을 수도 있다.\n\n버전 번호의 증가나 변화는 개발사 특유의 정책에 의해 충분히 변화 할 수 있지만, 각 점(dot) 별 순서의 의미 자체는 크게 변하지 않는다.\n\n**소숫점으로 인한 오해**\n\nVersion의 번호에 붙는 점(dot)을 소숫점으로 인식해서 간혹 오해를 일으키는 경우가 있다. 위의 질답에서 답이 틀렸다면 버전을 소수로 읽고 있기 때문일 것이다.\n\n정확히 말하자면, 버전은 소수가 아니다. Major나 Minor 버전의 경우 한 자리로 표기되면 2자리로 바꿔서 보면 편하다.\n\n**1.1 -> 알기쉽게 일반적으로 표현하면 1.01**\n**1.10 ->  그 자체로 표현**\n\n이렇게 바꿔놓고 보면 편하다. 즉, 1.1보다 1.10이 더 높은 버전 번호이다. 1.1과 1.10은 같은 버전이 절대로 아니다.\n\n**1.2 -> 변형해서 1.02**\n**1.12 -> 그대로 1.12**\n\n이 경우를 소수로 인식해서 1.2와 1.12는 1.2가 더 크니까 1.2가 최선 버전이다 라고 인식하면 안된다. 1.2는 1.02로 인식하는게 더 정확하다.\n\n세 자리 이상으로 표현된 버전의 경우도 위 처럼 2자리 이상의 숫자로 변경해 놓고 생각하면 된다.\n\n특정 개발사는 정확한 버전 구분을 위해 1.1 대신 1.01 과 같이 정확하게 표기해 주는 경우도 있다. 이런 경우는 구분하기 편할 것이다.\n\n보통은 Major나 Minor 버전 숫자가 2자리를 넘어갈 정도 까지 갈 정도로 버전을 붙이지는 않는다. 그 만큼 변화가 많은 소프트웨어는 사용자 입장에서도 크게 좋은 건 아니니깐 말이다.\n\n**RC와 Beta**\n\nRC(Release Candidate)와 Beta 라는 이름을 버전 근처에 붙이는 경우가 있는데 둘 다 비슷한 의미이다. 바로 테스트 버전이라는 의미이다.\n\n특히 RC의 경우는 릴리즈(Release, 정식 배포) 후보라고 해서 이 버전에서 테스트 해서 문제가 없으면 별 다른 수정 없이 RC만 떼어내고 릴리즈 하는게 일종의 관행이다. RC도 특정 숫자가 붙을 수도 있는데 RC1, RC2 이런 두 가지가 있다면 둘 다 릴리즈 후보라는 것이다.\n\n**개발사 특유의 버전 네이밍: Mac OS X**\n\n현재 애플에서는 OS X 라고 공식적으로 칭하고 있지만 어쨌든 Mac OS X라는 매킨토시용 OS 이름이 있다. 여기서 X는 알파벳 숫자로 아라비안 숫자로 표시하면 10이다. 즉 OS X는 10.x.x라는 버전의 제품명이다.\n\n최신 OS X인 라이온(Lion)은 10.7.x 버전으로 표기되고 있다. 여기서 Major 버전 7이 라이온의 주요 버전인 셈이다. 비슷하게 10.6.x 는 Snow Leopard, 10.5.x는 Leopard 이다.\n\nOS의 경우 제일 앞의 버전 번호 변화는 정말 큰 변화다. 그래서 애플에서는 이런 식으로 두 번째 버전 번호를 큰 변화를 암시하는 식으로 버전을 명명한다.\n\n**개발사 특유의 버전 네이밍: Google Chrome**\n\n구글에서 개발/배포하는 유명한 인기 웹브라우저. 특징적인 면이 있다면 굉장히 버전이 빨리 올라간다는 점. 특히 제일 앞자리는 1년에도 수 차례 올라갈 정도로 지나치게 변하고 있다고 느끼고 있다.\n\n하지만 크롬의 버전 명명은 눈속임인 것 같다. '나 굉장히 빨리 발전하고 있어요!' 라는 말을 하는 것 같다. 개인적으론 크롬의 버전은 앞에 하나가 숨은 것 같다. 현재 가장 최신 버전인 10.0.963.56 이라는 버전은 1.10.0.963.56 이 아닐까 -\\_-;;;;\n\n**정리**\n\n버전의 점(dot)을 수학의 소숫점로 읽으면 곤란하다. 또한 버전에는 영문자도 쓸 수 있고 개발사 마다 버전을 구분하는 점(dot)을 몇 가지 이용하느냐도 다르다.\n\n버전 제일 앞자리가 변경될 정도의 변화에는 아예 버전 대신 제품명을 바꾸는 케이스도 있으니 주의하자.\n\n## Reference\n\n[http://seorenn.blogspot.com/2012/02/version.html](http://seorenn.blogspot.com/2012/02/version.html)\n"},"html":"<p><img src=\"./images/version_image.png\" alt=\"버젼\"></p>\n<h1 id=\"버젼-개념\" style=\"position:relative;\"><a href=\"#%EB%B2%84%EC%A0%BC-%EA%B0%9C%EB%85%90\" aria-label=\"버젼 개념 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>버젼 개념</h1>\n<h2 id=\"버전version을-제대로-이해하기\" style=\"position:relative;\"><a href=\"#%EB%B2%84%EC%A0%84version%EC%9D%84-%EC%A0%9C%EB%8C%80%EB%A1%9C-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0\" aria-label=\"버전version을 제대로 이해하기 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>버전(Version)을 제대로 이해하기</h2>\n<p><strong>Q. 1.3과 1.12 중 어느 버전이 더 최신 버전인가요?</strong>\n<strong>A. 1.12가 더 최신버전입니다.</strong></p>\n<p>위의 같은 질문류를 커뮤니티에서 본 적이 있는데 놀랍게도 1.3을 1.12보다 더 높은 버전으로 생각하는 사람이 많은 것 같았다. 그래서 이번에는 버전 번호를 제대로 이해하는 방법을 한번 써 볼까 한다.</p>\n<p><strong>Version 정리</strong></p>\n<p>버전 번호는 점(dot)으로 구분되며 순서대로 다음과 같은 식의 구조를 가지고 있다.</p>\n<p><strong>Major Version . Minor Version . Build or Maintenance Version</strong></p>\n<p>이게 일반적인 정의지만 정석은 아니다. 실제로 버전 번호는 3자리 이상도 사용 하기도 한다.</p>\n<p>일단 여기서는 설명을 위해 3자리를 기준으로 이렇게 표현하겠다.</p>\n<p><strong>Release Number . Major Number . Minor Number</strong></p>\n<ul>\n<li>Release Number: 1로 시작해서 전체를 뒤엎을 정도로 큰 변화가 발생했을 때 이 수치를 올린다. (영화 속편이 나오면 2편 혹은 투(two)이라는 이름을 붙이듯 말이다.)</li>\n<li>Major Number: 0으로 시작해서 주요 기능의 추가나 변경 등 사용상 혹은 컨텐츠의 주요 변화가 발생했을 때 1혹은 무작위로 증가한다. 간혹 알파벳이 붙기도 하는데 예를 들어 Beta(테스트버전)의 경우 b를 숫자 뒤에 붙이는 경향이 있다.</li>\n<li>Minor Number: 0으로 시작해서 버그 수정 등 미미한 변화가 발생하면 1씩 혹은 무작위로 증가한다. 역시 개발사 정책에 따라 특정 알파벳이 붙을 수도 있다.</li>\n</ul>\n<p>버전 번호의 증가나 변화는 개발사 특유의 정책에 의해 충분히 변화 할 수 있지만, 각 점(dot) 별 순서의 의미 자체는 크게 변하지 않는다.</p>\n<p><strong>소숫점으로 인한 오해</strong></p>\n<p>Version의 번호에 붙는 점(dot)을 소숫점으로 인식해서 간혹 오해를 일으키는 경우가 있다. 위의 질답에서 답이 틀렸다면 버전을 소수로 읽고 있기 때문일 것이다.</p>\n<p>정확히 말하자면, 버전은 소수가 아니다. Major나 Minor 버전의 경우 한 자리로 표기되면 2자리로 바꿔서 보면 편하다.</p>\n<p><strong>1.1 -> 알기쉽게 일반적으로 표현하면 1.01</strong>\n<strong>1.10 ->  그 자체로 표현</strong></p>\n<p>이렇게 바꿔놓고 보면 편하다. 즉, 1.1보다 1.10이 더 높은 버전 번호이다. 1.1과 1.10은 같은 버전이 절대로 아니다.</p>\n<p><strong>1.2 -> 변형해서 1.02</strong>\n<strong>1.12 -> 그대로 1.12</strong></p>\n<p>이 경우를 소수로 인식해서 1.2와 1.12는 1.2가 더 크니까 1.2가 최선 버전이다 라고 인식하면 안된다. 1.2는 1.02로 인식하는게 더 정확하다.</p>\n<p>세 자리 이상으로 표현된 버전의 경우도 위 처럼 2자리 이상의 숫자로 변경해 놓고 생각하면 된다.</p>\n<p>특정 개발사는 정확한 버전 구분을 위해 1.1 대신 1.01 과 같이 정확하게 표기해 주는 경우도 있다. 이런 경우는 구분하기 편할 것이다.</p>\n<p>보통은 Major나 Minor 버전 숫자가 2자리를 넘어갈 정도 까지 갈 정도로 버전을 붙이지는 않는다. 그 만큼 변화가 많은 소프트웨어는 사용자 입장에서도 크게 좋은 건 아니니깐 말이다.</p>\n<p><strong>RC와 Beta</strong></p>\n<p>RC(Release Candidate)와 Beta 라는 이름을 버전 근처에 붙이는 경우가 있는데 둘 다 비슷한 의미이다. 바로 테스트 버전이라는 의미이다.</p>\n<p>특히 RC의 경우는 릴리즈(Release, 정식 배포) 후보라고 해서 이 버전에서 테스트 해서 문제가 없으면 별 다른 수정 없이 RC만 떼어내고 릴리즈 하는게 일종의 관행이다. RC도 특정 숫자가 붙을 수도 있는데 RC1, RC2 이런 두 가지가 있다면 둘 다 릴리즈 후보라는 것이다.</p>\n<p><strong>개발사 특유의 버전 네이밍: Mac OS X</strong></p>\n<p>현재 애플에서는 OS X 라고 공식적으로 칭하고 있지만 어쨌든 Mac OS X라는 매킨토시용 OS 이름이 있다. 여기서 X는 알파벳 숫자로 아라비안 숫자로 표시하면 10이다. 즉 OS X는 10.x.x라는 버전의 제품명이다.</p>\n<p>최신 OS X인 라이온(Lion)은 10.7.x 버전으로 표기되고 있다. 여기서 Major 버전 7이 라이온의 주요 버전인 셈이다. 비슷하게 10.6.x 는 Snow Leopard, 10.5.x는 Leopard 이다.</p>\n<p>OS의 경우 제일 앞의 버전 번호 변화는 정말 큰 변화다. 그래서 애플에서는 이런 식으로 두 번째 버전 번호를 큰 변화를 암시하는 식으로 버전을 명명한다.</p>\n<p><strong>개발사 특유의 버전 네이밍: Google Chrome</strong></p>\n<p>구글에서 개발/배포하는 유명한 인기 웹브라우저. 특징적인 면이 있다면 굉장히 버전이 빨리 올라간다는 점. 특히 제일 앞자리는 1년에도 수 차례 올라갈 정도로 지나치게 변하고 있다고 느끼고 있다.</p>\n<p>하지만 크롬의 버전 명명은 눈속임인 것 같다. '나 굉장히 빨리 발전하고 있어요!' 라는 말을 하는 것 같다. 개인적으론 크롬의 버전은 앞에 하나가 숨은 것 같다. 현재 가장 최신 버전인 10.0.963.56 이라는 버전은 1.10.0.963.56 이 아닐까 -_-;;;;</p>\n<p><strong>정리</strong></p>\n<p>버전의 점(dot)을 수학의 소숫점로 읽으면 곤란하다. 또한 버전에는 영문자도 쓸 수 있고 개발사 마다 버전을 구분하는 점(dot)을 몇 가지 이용하느냐도 다르다.</p>\n<p>버전 제일 앞자리가 변경될 정도의 변화에는 아예 버전 대신 제품명을 바꾸는 케이스도 있으니 주의하자.</p>\n<h2 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<p><a href=\"http://seorenn.blogspot.com/2012/02/version.html\">http://seorenn.blogspot.com/2012/02/version.html</a></p>"},{"frontmatter":{"tags":["typescript"],"title":"typescript eslint 설정"},"internal":{"content":"\n![typescript](./images/typescript_image.png)\n\n# typescript eslint 설정\n\nvscode eslint 확장프로그램 설치\n\n```bash\nyarn add --dev eslint typescript @typescript-eslint/parser @typescript-eslint/eslint-plugin\n```\n\n```js\n// .eslintrc.js\nmodule.exports = {\n  root: true,\n  parser: \"@typescript-eslint/parser\",\n  plugins: [\"@typescript-eslint\"],\n  extends: [\"eslint:recommended\", \"plugin:@typescript-eslint/recommended\"],\n}\n```\n\n## eslint 실행\n\n```bash\nyarn run eslint [폴더위치] --ext .js,.jsx,.ts,.tsx\nyarn run eslint . --ext .js,.jsx,.ts,.tsx\n```\n\n## airbnb lint 적용하기\n\n```bash\nyarn add -D eslint-config-airbnb-typescript \\\n            @typescript-eslint/eslint-plugin@^5.0.0 \\\n            @typescript-eslint/parser@^5.0.0\n```\n\n```js\nmodule.exports = {\n  root: true,\n  parser: \"@typescript-eslint/parser\",\n  parserOptions: {\n    tsconfigRootDir: __dirname,\n    project: [\"./tsconfig.json\"],\n  },\n  plugins: [\"@typescript-eslint\"],\n  extends: [\"airbnb-typescript\"],\n}\n```\n\n## 참고문서\n\n[공식 typescript eslint](https://typescript-eslint.io/docs/linting/)\n\n[eslint-config-airbnb-typescript npm](https://www.npmjs.com/package/eslint-config-airbnb-typescript)\n"},"html":"<p><img src=\"./images/typescript_image.png\" alt=\"typescript\"></p>\n<h1 id=\"typescript-eslint-설정\" style=\"position:relative;\"><a href=\"#typescript-eslint-%EC%84%A4%EC%A0%95\" aria-label=\"typescript eslint 설정 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>typescript eslint 설정</h1>\n<p>vscode eslint 확장프로그램 설치</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> --dev eslint typescript @typescript-eslint/parser @typescript-eslint/eslint-plugin</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// .eslintrc.js</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  root<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  parser<span class=\"token operator\">:</span> <span class=\"token string\">\"@typescript-eslint/parser\"</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"@typescript-eslint\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">extends</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"eslint:recommended\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"plugin:@typescript-eslint/recommended\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"eslint-실행\" style=\"position:relative;\"><a href=\"#eslint-%EC%8B%A4%ED%96%89\" aria-label=\"eslint 실행 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>eslint 실행</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> run eslint <span class=\"token punctuation\">[</span>폴더위치<span class=\"token punctuation\">]</span> --ext .js,.jsx,.ts,.tsx\n<span class=\"token function\">yarn</span> run eslint <span class=\"token builtin class-name\">.</span> --ext .js,.jsx,.ts,.tsx</code></pre></div>\n<h2 id=\"airbnb-lint-적용하기\" style=\"position:relative;\"><a href=\"#airbnb-lint-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"airbnb lint 적용하기 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>airbnb lint 적용하기</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> -D eslint-config-airbnb-typescript <span class=\"token punctuation\">\\</span>\n            @typescript-eslint/eslint-plugin@^5.0.0 <span class=\"token punctuation\">\\</span>\n            @typescript-eslint/parser@^5.0.0</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  root<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  parser<span class=\"token operator\">:</span> <span class=\"token string\">\"@typescript-eslint/parser\"</span><span class=\"token punctuation\">,</span>\n  parserOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    tsconfigRootDir<span class=\"token operator\">:</span> __dirname<span class=\"token punctuation\">,</span>\n    project<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./tsconfig.json\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"@typescript-eslint\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">extends</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"airbnb-typescript\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"참고문서\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EB%AC%B8%EC%84%9C\" aria-label=\"참고문서 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고문서</h2>\n<p><a href=\"https://typescript-eslint.io/docs/linting/\">공식 typescript eslint</a></p>\n<p><a href=\"https://www.npmjs.com/package/eslint-config-airbnb-typescript\">eslint-config-airbnb-typescript npm</a></p>"},{"frontmatter":{"tags":["react native"],"title":"react native 가운데정렬"},"internal":{"content":"\n# react native 가운데정렬\n\n```javascript\nimport React, { Component } from \"react\"\nimport { Text, View, StyleSheet } from \"react-native\"\n\nconst styles = StyleSheet.create({\n  login: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n})\n\nclass Login extends Component {\n  render() {\n    return (\n      <View style={styles.login}>\n        <Text> Login </Text>\n      </View>\n    )\n  }\n}\n\nexport default Login\n```\n\n위 코드에서 alignItems는 가로로 가운데 정렬, justifyContent는 세로로 가운데 정렬, 하지만 flex 방향에 따라서 가로 세로 기준이 바뀔 수 있다\n\n![가운데 정렬](https://i.imgur.com/n4DVf3q.png)\n"},"html":"<h1 id=\"react-native-가운데정렬\" style=\"position:relative;\"><a href=\"#react-native-%EA%B0%80%EC%9A%B4%EB%8D%B0%EC%A0%95%EB%A0%AC\" aria-label=\"react native 가운데정렬 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>react native 가운데정렬</h1>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Text<span class=\"token punctuation\">,</span> View<span class=\"token punctuation\">,</span> StyleSheet <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-native\"</span>\n\n<span class=\"token keyword\">const</span> styles <span class=\"token operator\">=</span> StyleSheet<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  login<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    flex<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    justifyContent<span class=\"token operator\">:</span> <span class=\"token string\">\"center\"</span><span class=\"token punctuation\">,</span>\n    alignItems<span class=\"token operator\">:</span> <span class=\"token string\">\"center\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Login</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>login<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span> Login <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Login</code></pre></div>\n<p>위 코드에서 alignItems는 가로로 가운데 정렬, justifyContent는 세로로 가운데 정렬, 하지만 flex 방향에 따라서 가로 세로 기준이 바뀔 수 있다</p>\n<p><img src=\"https://i.imgur.com/n4DVf3q.png\" alt=\"가운데 정렬\"></p>"},{"frontmatter":{"tags":["gatsby"],"title":"gatsby 구글애널리틱스 셋팅 했음에도 작동 안할시"},"internal":{"content":"\n# gatsby 구글애널리틱스 셋팅 했음에도 작동 안할시\n\n## 구글 애널리틱스 셋팅\n\n1.  git bash에서 npm 명령어 실행\n\n```bash\nnpm install --save gatsby-plugin-gtag\n```\n\n2.  `gatsby-config.js` 파일에 아래 코드 추가해주기\n\n```js\nmodule.exports = {\n  plugins: [\n    {\n      resolve: `gatsby-plugin-gtag`,\n      options: {\n        trackingId: `UA-XXXXXXXX-X`, // 측정 ID\n        head: false, // head에 tracking script를 넣고 싶다면 true로 변경\n        anonymize: true,\n      },\n    },\n  ],\n}\n```\n\n💡 만약 위의 코드를 `gatsby-config.js`에 추가했는데도 전혀 추적이 되지 않고 있다면 gatsby-plugin-gtag를 플러그인 최상단에 배치하면 된다.\n\n# Reference\n\n[https://janeljs.github.io/blog/google-analytics/](https://janeljs.github.io/blog/google-analytics/)\n"},"html":"<h1 id=\"gatsby-구글애널리틱스-셋팅-했음에도-작동-안할시\" style=\"position:relative;\"><a href=\"#gatsby-%EA%B5%AC%EA%B8%80%EC%95%A0%EB%84%90%EB%A6%AC%ED%8B%B1%EC%8A%A4-%EC%85%8B%ED%8C%85-%ED%96%88%EC%9D%8C%EC%97%90%EB%8F%84-%EC%9E%91%EB%8F%99-%EC%95%88%ED%95%A0%EC%8B%9C\" aria-label=\"gatsby 구글애널리틱스 셋팅 했음에도 작동 안할시 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>gatsby 구글애널리틱스 셋팅 했음에도 작동 안할시</h1>\n<h2 id=\"구글-애널리틱스-셋팅\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%EA%B8%80-%EC%95%A0%EB%84%90%EB%A6%AC%ED%8B%B1%EC%8A%A4-%EC%85%8B%ED%8C%85\" aria-label=\"구글 애널리틱스 셋팅 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구글 애널리틱스 셋팅</h2>\n<ol>\n<li>git bash에서 npm 명령어 실행</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save gatsby-plugin-gtag</code></pre></div>\n<ol start=\"2\">\n<li><code class=\"language-text\">gatsby-config.js</code> 파일에 아래 코드 추가해주기</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">gatsby-plugin-gtag</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        trackingId<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">UA-XXXXXXXX-X</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 측정 ID</span>\n        head<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// head에 tracking script를 넣고 싶다면 true로 변경</span>\n        anonymize<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>💡 만약 위의 코드를 <code class=\"language-text\">gatsby-config.js</code>에 추가했는데도 전혀 추적이 되지 않고 있다면 gatsby-plugin-gtag를 플러그인 최상단에 배치하면 된다.</p>\n<h1 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h1>\n<p><a href=\"https://janeljs.github.io/blog/google-analytics/\">https://janeljs.github.io/blog/google-analytics/</a></p>"},{"frontmatter":{"tags":["cypress"],"title":"Cypress url 쿠키 삭제하는 문제"},"internal":{"content":"\n![cypress](./images/cypress.png)\n\n# Cypress url 쿠키 삭제하는 문제\n\nCypress를 사용하다보면 인증 후 개발환경에서 잘 작동하던것처럼 작동하지 않는 경우가 있었다.\n왜인고 하니 cypress 자체가 각 테스트를 하기전 localstrage와 cookie를 삭제하는 문제가 있었다\n\n다음 코드를 추가해주면 위 문제를 해결된다\n\n## localstorage 보존\n\n```js\nbeforeEach(() => {\n  cy.restoreLocalStorage()\n})\n\nafterEach(() => {\n  cy.saveLocalStorage()\n})\n```\n\n## cookie 보존\n\n```js\n\nbefore(() => {\n    Cypress.Cookies.preserveOnce('쿠키이름1', '쿠키이름2', '쿠키이름3' ...)\n})\n\n```\n"},"html":"<p><img src=\"./images/cypress.png\" alt=\"cypress\"></p>\n<h1 id=\"cypress-url-쿠키-삭제하는-문제\" style=\"position:relative;\"><a href=\"#cypress-url-%EC%BF%A0%ED%82%A4-%EC%82%AD%EC%A0%9C%ED%95%98%EB%8A%94-%EB%AC%B8%EC%A0%9C\" aria-label=\"cypress url 쿠키 삭제하는 문제 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cypress url 쿠키 삭제하는 문제</h1>\n<p>Cypress를 사용하다보면 인증 후 개발환경에서 잘 작동하던것처럼 작동하지 않는 경우가 있었다.\n왜인고 하니 cypress 자체가 각 테스트를 하기전 localstrage와 cookie를 삭제하는 문제가 있었다</p>\n<p>다음 코드를 추가해주면 위 문제를 해결된다</p>\n<h2 id=\"localstorage-보존\" style=\"position:relative;\"><a href=\"#localstorage-%EB%B3%B4%EC%A1%B4\" aria-label=\"localstorage 보존 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>localstorage 보존</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  cy<span class=\"token punctuation\">.</span><span class=\"token function\">restoreLocalStorage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">afterEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  cy<span class=\"token punctuation\">.</span><span class=\"token function\">saveLocalStorage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"cookie-보존\" style=\"position:relative;\"><a href=\"#cookie-%EB%B3%B4%EC%A1%B4\" aria-label=\"cookie 보존 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>cookie 보존</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">\n<span class=\"token function\">before</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    Cypress<span class=\"token punctuation\">.</span>Cookies<span class=\"token punctuation\">.</span><span class=\"token function\">preserveOnce</span><span class=\"token punctuation\">(</span><span class=\"token string\">'쿠키이름1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'쿠키이름2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'쿠키이름3'</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre></div>"},{"frontmatter":{"tags":["css"],"title":":와 :: 차이"},"internal":{"content":"\n![css](./images/css.png)\n\n# :와 :: 차이\n\n[참고](https://brunch.co.kr/@linterpreteur/27)\n\n## **:** 과 **::** 의 차이\n\n많은 프론트엔드 엔지니어가 **:** 과 **::** 를 구분하지 않고 모든 상황에 **:** 을 사용합니다. 최신 브라우저에서는 문제가 없지만 차이를 이해할 필요가 있습니다.\n\n**:** 는 [가상 클래스](https://developer.mozilla.org/ko/docs/Web/CSS/Pseudo-classes)pseudo\\-class를 나타내며, 따라서 HTML 문서의 일부를 DOM 트리 구조와는 상관 없는 방법으로 선택할 때 사용됩니다. **:hover** , **:active** , **:focus** , **:link** , **:checked** , **:not()** , **:disabled** , **:nth\\-of\\-type()**  등이 가상 클래스입니다. [이 페이지](https://developer.mozilla.org/ko/docs/Web/CSS/Pseudo-classes#표준_가상_클래스_색인)에서 전체 목록을 보실 수 있습니다.\n\n**::** 는 [가상 요소pseudo\\-element](https://developer.mozilla.org/ko/docs/Web/CSS/pseudo-elements)를 나타내며 이는 곧 문서에 나타난 것 이외에 추가로 정의된 DOM 트리의 추상화 레이어입니다. 가상 요소에는 **::after** , **::before** , **::first\\-letter**  등이 해당됩니다. [이 페이지](https://developer.mozilla.org/ko/docs/Web/CSS/pseudo-elements#모든_가상_요소)에 전체 목록이 있습니다.\n\n위에서 언급한 대로 **:** 을 쓰더라도 문제는 없습니다. 하지만 W3의 가이드라인을 따르는 것이 더 좋을 것입니다. 또한 가상 요소를 나타낼 때 **:** 을 쓴다면, IE8에서 작동하지 않습니다.\n"},"html":"<p><img src=\"./images/css.png\" alt=\"css\"></p>\n<h1 id=\"와--차이\" style=\"position:relative;\"><a href=\"#%EC%99%80--%EC%B0%A8%EC%9D%B4\" aria-label=\"와  차이 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>:와 :: 차이</h1>\n<p><a href=\"https://brunch.co.kr/@linterpreteur/27\">참고</a></p>\n<h2 id=\"-과--의-차이\" style=\"position:relative;\"><a href=\"#-%EA%B3%BC--%EC%9D%98-%EC%B0%A8%EC%9D%B4\" aria-label=\" 과  의 차이 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>:</strong> 과 <strong>::</strong> 의 차이</h2>\n<p>많은 프론트엔드 엔지니어가 <strong>:</strong> 과 <strong>::</strong> 를 구분하지 않고 모든 상황에 <strong>:</strong> 을 사용합니다. 최신 브라우저에서는 문제가 없지만 차이를 이해할 필요가 있습니다.</p>\n<p><strong>:</strong> 는 <a href=\"https://developer.mozilla.org/ko/docs/Web/CSS/Pseudo-classes\">가상 클래스</a>pseudo-class를 나타내며, 따라서 HTML 문서의 일부를 DOM 트리 구조와는 상관 없는 방법으로 선택할 때 사용됩니다. <strong>:hover</strong> , <strong>:active</strong> , <strong>:focus</strong> , <strong>:link</strong> , <strong>:checked</strong> , <strong>:not()</strong> , <strong>:disabled</strong> , <strong>:nth-of-type()</strong>  등이 가상 클래스입니다. <a href=\"https://developer.mozilla.org/ko/docs/Web/CSS/Pseudo-classes#%ED%91%9C%EC%A4%80_%EA%B0%80%EC%83%81_%ED%81%B4%EB%9E%98%EC%8A%A4_%EC%83%89%EC%9D%B8\">이 페이지</a>에서 전체 목록을 보실 수 있습니다.</p>\n<p><strong>::</strong> 는 <a href=\"https://developer.mozilla.org/ko/docs/Web/CSS/pseudo-elements\">가상 요소pseudo-element</a>를 나타내며 이는 곧 문서에 나타난 것 이외에 추가로 정의된 DOM 트리의 추상화 레이어입니다. 가상 요소에는 <strong>::after</strong> , <strong>::before</strong> , <strong>::first-letter</strong>  등이 해당됩니다. <a href=\"https://developer.mozilla.org/ko/docs/Web/CSS/pseudo-elements#%EB%AA%A8%EB%93%A0_%EA%B0%80%EC%83%81_%EC%9A%94%EC%86%8C\">이 페이지</a>에 전체 목록이 있습니다.</p>\n<p>위에서 언급한 대로 <strong>:</strong> 을 쓰더라도 문제는 없습니다. 하지만 W3의 가이드라인을 따르는 것이 더 좋을 것입니다. 또한 가상 요소를 나타낼 때 <strong>:</strong> 을 쓴다면, IE8에서 작동하지 않습니다.</p>"},{"frontmatter":{"tags":["apollo"],"title":"apollo @client 지시문 & 캐시에 data쓰기"},"internal":{"content":"\n![apollo](./images/apollo.png)\n\n# apollo client 지시문 & 캐시에 data쓰기\n\nApollo Client 가 캐시에서 가져 오도록 지정하는 것이다. @client 이렇게 붙여주기만 하면 된다 [Doc](https://www.apollographql.com/docs/tutorial/local-state)\n\n`예시`\n\n```javascript\nimport { Query, ApolloProvider } from \"react-apollo\"\nimport gql from \"graphql-tag\"\n\nimport Pages from \"./pages\"\nimport Login from \"./pages/login\"\nimport injectStyles from \"./styles\"\n\nconst IS_LOGGED_IN = gql`\n  query IsUserLoggedIn {\n    isLoggedIn @client\n  }\n`\n\ninjectStyles()\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Query query={IS_LOGGED_IN}>\n      {({ data }) => (data.isLoggedIn ? <Pages /> : <Login />)}\n    </Query>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n)\n```\n\n`직접 캐시에 쓰는 법`\n\n```javascript\nclient.writeData({ data: { isLoggedIn: false } })\n```\n\n```javascript\nimport React from \"react\"\nimport styled from \"react-emotion\"\nimport { ApolloConsumer } from \"react-apollo\"\n\nimport { menuItemClassName } from \"../components/menu-item\"\nimport { ReactComponent as ExitIcon } from \"../assets/icons/exit.svg\"\n\nexport default function LogoutButton() {\n  return (\n    <ApolloConsumer>\n      {client => (\n        <StyledButton\n          onClick={() => {\n            client.writeData({ data: { isLoggedIn: false } })\n            localStorage.clear()\n          }}\n        >\n          <ExitIcon />\n          Logout\n        </StyledButton>\n      )}\n    </ApolloConsumer>\n  )\n}\n\nconst StyledButton = styled(\"button\")(menuItemClassName, {\n  background: \"none\",\n  border: \"none\",\n  padding: 0,\n})\n```\n"},"html":"<p><img src=\"./images/apollo.png\" alt=\"apollo\"></p>\n<h1 id=\"apollo-client-지시문--캐시에-data쓰기\" style=\"position:relative;\"><a href=\"#apollo-client-%EC%A7%80%EC%8B%9C%EB%AC%B8--%EC%BA%90%EC%8B%9C%EC%97%90-data%EC%93%B0%EA%B8%B0\" aria-label=\"apollo client 지시문  캐시에 data쓰기 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>apollo client 지시문 &#x26; 캐시에 data쓰기</h1>\n<p>Apollo Client 가 캐시에서 가져 오도록 지정하는 것이다. @client 이렇게 붙여주기만 하면 된다 <a href=\"https://www.apollographql.com/docs/tutorial/local-state\">Doc</a></p>\n<p><code class=\"language-text\">예시</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Query<span class=\"token punctuation\">,</span> ApolloProvider <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-apollo\"</span>\n<span class=\"token keyword\">import</span> gql <span class=\"token keyword\">from</span> <span class=\"token string\">\"graphql-tag\"</span>\n\n<span class=\"token keyword\">import</span> Pages <span class=\"token keyword\">from</span> <span class=\"token string\">\"./pages\"</span>\n<span class=\"token keyword\">import</span> Login <span class=\"token keyword\">from</span> <span class=\"token string\">\"./pages/login\"</span>\n<span class=\"token keyword\">import</span> injectStyles <span class=\"token keyword\">from</span> <span class=\"token string\">\"./styles\"</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">IS_LOGGED_IN</span> <span class=\"token operator\">=</span> gql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  query IsUserLoggedIn {\n    isLoggedIn @client\n  }\n</span><span class=\"token template-punctuation string\">`</span></span>\n\n<span class=\"token function\">injectStyles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>ApolloProvider client<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>client<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Query query<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token constant\">IS_LOGGED_IN</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>isLoggedIn <span class=\"token operator\">?</span> <span class=\"token operator\">&lt;</span>Pages <span class=\"token operator\">/</span><span class=\"token operator\">></span> <span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>Login <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Query<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ApolloProvider<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">직접 캐시에 쓰는 법</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">client<span class=\"token punctuation\">.</span><span class=\"token function\">writeData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> isLoggedIn<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-emotion\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ApolloConsumer <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-apollo\"</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> menuItemClassName <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../components/menu-item\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ReactComponent <span class=\"token keyword\">as</span> ExitIcon <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../assets/icons/exit.svg\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">LogoutButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>ApolloConsumer<span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span><span class=\"token parameter\">client</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>StyledButton\n          onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            client<span class=\"token punctuation\">.</span><span class=\"token function\">writeData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> isLoggedIn<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>ExitIcon <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n          Logout\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>StyledButton<span class=\"token operator\">></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ApolloConsumer<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> StyledButton <span class=\"token operator\">=</span> <span class=\"token function\">styled</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"button\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>menuItemClassName<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  background<span class=\"token operator\">:</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">,</span>\n  border<span class=\"token operator\">:</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">,</span>\n  padding<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>"},{"frontmatter":{"tags":["ant design","최적화"],"title":"antd최적화"},"internal":{"content":"\n![ant design](./images/antd.png)\n\n# antd최적화\n\n## 다음 모듈 버젼 이상 설치\n\n```\n\"antd\": \"4.0.0-alpha.4\",\n\"@ant-design/icons\": \"^4.0.0-alpha.9\",\n```\n\n## babel에 다음 코드 추가\n\n```js\n\"plugins\": [\n      [\n        \"import\",\n        {\n          \"libraryName\": \"antd-mobile\",\n          \"style\": \"css\"\n        }\n      ]\n    ]\n```\n\n## 아이콘을 사용할 때 예시\n\n```js\nimport CaretLeftIcon from \"@ant-design/icons/CaretLeft\"\n```\n\n# antd 모바일 최적화\n\n## html에 다음 추가\n\n```html\n<meta\n  name=\"viewport\"\n  content=\"width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no\"\n/>\n<script src=\"https://as.alipayobjects.com/g/component/fastclick/1.0.6/fastclick.js\"></script>\n<script>\n  if (\"addEventListener\" in document) {\n    document.addEventListener(\n      \"DOMContentLoaded\",\n      function () {\n        FastClick.attach(document.body)\n      },\n      false\n    )\n  }\n  if (!window.Promise) {\n    document.writeln(\n      '<script src=\"https://as.alipayobjects.com/g/component/es6-promise/3.2.2/es6-promise.min.js\"' +\n        \">\" +\n        \"<\" +\n        \"/\" +\n        \"script>\"\n    )\n  }\n</script>\n```\n\n## babel에 다음 추가\n\n```js\n{\n  \"plugins\": [\n    [\"import\", { \"libraryName\": \"antd-mobile\", \"style\": \"css\" }] // `style: true` for less\n  ]\n}\n```\n\n## next에서 최적화\n\n## 참고자료\n\n[예제](https://github.com/zeit/next.js/blob/canary/examples/with-antd-mobile/next.config.js)\n\n모듈설치\n\n```bash\nyarn add -D @zeit/next-css null-loader\n```\n\n```js\n// next.config.js\nconst withCSS = require(\"@zeit/next-css\")\n\nmodule.exports = withCSS({\n  webpack: (config, { isServer }) => {\n    if (isServer) {\n      const antStyles = /antd-mobile\\/.*?\\/style.*?/\n      const origExternals = [...config.externals]\n      config.externals = [\n        (context, request, callback) => {\n          if (request.match(antStyles)) return callback()\n          if (typeof origExternals[0] === \"function\") {\n            origExternals[0](context, request, callback)\n          } else {\n            callback()\n          }\n        },\n        ...(typeof origExternals[0] === \"function\" ? [] : origExternals),\n      ]\n\n      config.module.rules.unshift({\n        test: antStyles,\n        use: \"null-loader\",\n      })\n    }\n    return config\n  },\n})\n```\n"},"html":"<p><img src=\"./images/antd.png\" alt=\"ant design\"></p>\n<h1 id=\"antd최적화\" style=\"position:relative;\"><a href=\"#antd%EC%B5%9C%EC%A0%81%ED%99%94\" aria-label=\"antd최적화 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>antd최적화</h1>\n<h2 id=\"다음-모듈-버젼-이상-설치\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EC%9D%8C-%EB%AA%A8%EB%93%88-%EB%B2%84%EC%A0%BC-%EC%9D%B4%EC%83%81-%EC%84%A4%EC%B9%98\" aria-label=\"다음 모듈 버젼 이상 설치 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다음 모듈 버젼 이상 설치</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\"antd\": \"4.0.0-alpha.4\",\n\"@ant-design/icons\": \"^4.0.0-alpha.9\",</code></pre></div>\n<h2 id=\"babel에-다음-코드-추가\" style=\"position:relative;\"><a href=\"#babel%EC%97%90-%EB%8B%A4%EC%9D%8C-%EC%BD%94%EB%93%9C-%EC%B6%94%EA%B0%80\" aria-label=\"babel에 다음 코드 추가 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>babel에 다음 코드 추가</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string\">\"plugins\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"import\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token string\">\"libraryName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"antd-mobile\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"style\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"css\"</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">]</span></code></pre></div>\n<h2 id=\"아이콘을-사용할-때-예시\" style=\"position:relative;\"><a href=\"#%EC%95%84%EC%9D%B4%EC%BD%98%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%A0-%EB%95%8C-%EC%98%88%EC%8B%9C\" aria-label=\"아이콘을 사용할 때 예시 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>아이콘을 사용할 때 예시</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> CaretLeftIcon <span class=\"token keyword\">from</span> <span class=\"token string\">\"@ant-design/icons/CaretLeft\"</span></code></pre></div>\n<h1 id=\"antd-모바일-최적화\" style=\"position:relative;\"><a href=\"#antd-%EB%AA%A8%EB%B0%94%EC%9D%BC-%EC%B5%9C%EC%A0%81%ED%99%94\" aria-label=\"antd 모바일 최적화 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>antd 모바일 최적화</h1>\n<h2 id=\"html에-다음-추가\" style=\"position:relative;\"><a href=\"#html%EC%97%90-%EB%8B%A4%EC%9D%8C-%EC%B6%94%EA%B0%80\" aria-label=\"html에 다음 추가 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>html에 다음 추가</h2>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span>\n  <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://as.alipayobjects.com/g/component/fastclick/1.0.6/fastclick.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"addEventListener\"</span> <span class=\"token keyword\">in</span> document<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">\"DOMContentLoaded\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        FastClick<span class=\"token punctuation\">.</span><span class=\"token function\">attach</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>window<span class=\"token punctuation\">.</span>Promise<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">writeln</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">'&lt;script src=\"https://as.alipayobjects.com/g/component/es6-promise/3.2.2/es6-promise.min.js\"'</span> <span class=\"token operator\">+</span>\n        <span class=\"token string\">\">\"</span> <span class=\"token operator\">+</span>\n        <span class=\"token string\">\"&lt;\"</span> <span class=\"token operator\">+</span>\n        <span class=\"token string\">\"/\"</span> <span class=\"token operator\">+</span>\n        <span class=\"token string\">\"script>\"</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2 id=\"babel에-다음-추가\" style=\"position:relative;\"><a href=\"#babel%EC%97%90-%EB%8B%A4%EC%9D%8C-%EC%B6%94%EA%B0%80\" aria-label=\"babel에 다음 추가 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>babel에 다음 추가</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"plugins\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">\"import\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"libraryName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"antd-mobile\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"style\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"css\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// `style: true` for less</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"next에서-최적화\" style=\"position:relative;\"><a href=\"#next%EC%97%90%EC%84%9C-%EC%B5%9C%EC%A0%81%ED%99%94\" aria-label=\"next에서 최적화 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>next에서 최적화</h2>\n<h2 id=\"참고자료\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C\" aria-label=\"참고자료 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고자료</h2>\n<p><a href=\"https://github.com/zeit/next.js/blob/canary/examples/with-antd-mobile/next.config.js\">예제</a></p>\n<p>모듈설치</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> -D @zeit/next-css null-loader</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// next.config.js</span>\n<span class=\"token keyword\">const</span> withCSS <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"@zeit/next-css\"</span><span class=\"token punctuation\">)</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token function\">withCSS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">webpack</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">config<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> isServer <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isServer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> antStyles <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">antd-mobile\\/.*?\\/style.*?</span><span class=\"token regex-delimiter\">/</span></span>\n      <span class=\"token keyword\">const</span> origExternals <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>config<span class=\"token punctuation\">.</span>externals<span class=\"token punctuation\">]</span>\n      config<span class=\"token punctuation\">.</span>externals <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">(</span><span class=\"token parameter\">context<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>antStyles<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> origExternals<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"function\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            origExternals<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token operator\">...</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> origExternals<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"function\"</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> origExternals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span>\n\n      config<span class=\"token punctuation\">.</span>module<span class=\"token punctuation\">.</span>rules<span class=\"token punctuation\">.</span><span class=\"token function\">unshift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        test<span class=\"token operator\">:</span> antStyles<span class=\"token punctuation\">,</span>\n        use<span class=\"token operator\">:</span> <span class=\"token string\">\"null-loader\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> config\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>"}],"distinct":["ant design","apollo","css","cypress","gatsby","react native","typescript","개발 개념정리","네트워크","다이나모디비","데이터베이스","리눅스","부하테스트","비트&바이트 계산","삽질","에러모음","웹개발","유튜브키","자바스크립트","최적화","쿠버네티스"]},"allFile":{"nodes":[{"base":"random3.jpeg","absolutePath":"/Users/tdlab/Dropbox/athi_ts/static/randomImg/random3.jpeg"},{"base":"random2.jpeg","absolutePath":"/Users/tdlab/Dropbox/athi_ts/static/randomImg/random2.jpeg"},{"base":"random4.jpeg","absolutePath":"/Users/tdlab/Dropbox/athi_ts/static/randomImg/random4.jpeg"},{"base":"random1.jpeg","absolutePath":"/Users/tdlab/Dropbox/athi_ts/static/randomImg/random1.jpeg"}]}}}