{"data":{"allMarkdownRemark":{"nodes":[{"frontmatter":{"tags":["쿠버네티스"],"title":"쿠버네티스 통합로그 환경구축"},"internal":{"content":"\n![](./images/쿠버네티스%20통합로그%20환경구축.jpeg)\n\n# 쿠버네티스 통합로그 환경구축\n\n## 프로메테우스 설치\n\nhelm에 stable repo 추가\n\n```bash\nhelm repo add stable https://charts.helm.sh/stable\n```\n\n```bash\nhelm search repo stable\n```\n\n```bash\nhelm repo update\n```\n\n```bash\nhelm install monitor stable/prometheus\n```\n\n```bash\n# 삭제\nhelm uninstall stable/prometheus\n```\n\n```bash\n# 내부구성보기\nhelm inspect values stable/prometheus\n```\n\n```bash\nkubectl get pod\n```\n\n```bash\nkubectl get svc\n```\n\n```bash\n# ClusterIP를 NodePort로 변경\nkubectl edit svc monitor-prometheus-server\n```\n\n![](@attachment/Clipboard_2021-10-06-11-38-53.png)\n\n---\n\n## install 했지만 pod가 pending상태일 때\n\n```\n$ kubectl get pod\n```\n\n![](@attachment/Clipboard_2021-10-06-11-57-01.png)\n\n몇 개의 pod이**Pending**상태입니다.\n\n이유는 k8s클러스터에 StorageClass가 정의되어있지 않기 때문입니다.\n(pvc의 요청을 받아줄 provisioner가 없기 때문)\n\n그래서 일단 pv옵션을 false로 변경해주어 EmptyDir을 사용하게 해야 합니다.\n\nHelm chart의 설정을 변경하는 방법은 크게 두가지 방법이 있습니다.\n\n## using yaml\n\n문제가 되는 chart를 먼저 확인해봅시다.\n\n```\n$ helm inspect values stable/prometheus\n```\n\n![](@attachment/Clipboard_2021-10-06-11-57-21.png)\n\npersistentVolume.enabled가True입니다. 이렇게 표기되어있는 부분이 총 세군데가 있습니다.\n\n수정할 부분만 따로 파일을 만들어주면 됩니다.\n\n```\n$ vim volumeF.yaml\nalertmanager: persistentVolume: enabled: false server: persistentVolume: enabled: false pushgateway:\npersistentVolume: enabled: false\n\n업그레이드해줍시다.\n\n$ helm upgrade -f volumeF.yaml monitor stable/prometheus\n\n업그레이드 하게되면 Pending이었던 pod들이 Running상태로 변하는 것을 확인할 수 있습니다.\n```\n\n![](@attachment/Clipboard_2021-10-06-11-57-44.png)\n\n## using Command\n\n다른 방법으로는 커맨드라인으로 설정을 추가해주는 방법이 있습니다.\n\nouter: inner: value\n\n위와 같은 표현식을 다음과 같이 표현할 수 있습니다.\n\n```\n$ --set outer.inner=value\n\n그럼 위 문제와 같은 경우는 다음과 같이 표현될 수 있습니다.\n\n$ helm install monitor stable/prometheus --set alertmanager.persistentVolume.enabled=false --set\n  server.persistentVolume.enabled=false --set pushgateway.persistentVolume.enabled=false\n\npod들이 정상적으로 Running되었으니 웹으로 접속해봅시다.\n$ kubectl get svc\n```\n\n## Reference\n\n[helm으로 프로메테우스 설치](https://tommypagy.tistory.com/187)\n"},"html":"<p><img src=\"./images/%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4%20%ED%86%B5%ED%95%A9%EB%A1%9C%EA%B7%B8%20%ED%99%98%EA%B2%BD%EA%B5%AC%EC%B6%95.jpeg\" alt=\"\"></p>\n<h1 id=\"쿠버네티스-통합로그-환경구축\" style=\"position:relative;\"><a href=\"#%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4-%ED%86%B5%ED%95%A9%EB%A1%9C%EA%B7%B8-%ED%99%98%EA%B2%BD%EA%B5%AC%EC%B6%95\" aria-label=\"쿠버네티스 통합로그 환경구축 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>쿠버네티스 통합로그 환경구축</h1>\n<h2 id=\"프로메테우스-설치\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EB%A9%94%ED%85%8C%EC%9A%B0%EC%8A%A4-%EC%84%A4%EC%B9%98\" aria-label=\"프로메테우스 설치 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로메테우스 설치</h2>\n<p>helm에 stable repo 추가</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">helm repo <span class=\"token function\">add</span> stable https://charts.helm.sh/stable</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">helm search repo stable</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">helm repo update</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">helm <span class=\"token function\">install</span> monitor stable/prometheus</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 삭제</span>\nhelm uninstall stable/prometheus</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 내부구성보기</span>\nhelm inspect values stable/prometheus</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl get pod</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl get svc</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># ClusterIP를 NodePort로 변경</span>\nkubectl edit svc monitor-prometheus-server</code></pre></div>\n<p><img src=\"@attachment/Clipboard_2021-10-06-11-38-53.png\" alt=\"\"></p>\n<hr>\n<h2 id=\"install-했지만-pod가-pending상태일-때\" style=\"position:relative;\"><a href=\"#install-%ED%96%88%EC%A7%80%EB%A7%8C-pod%EA%B0%80-pending%EC%83%81%ED%83%9C%EC%9D%BC-%EB%95%8C\" aria-label=\"install 했지만 pod가 pending상태일 때 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>install 했지만 pod가 pending상태일 때</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ kubectl get pod</code></pre></div>\n<p><img src=\"@attachment/Clipboard_2021-10-06-11-57-01.png\" alt=\"\"></p>\n<p>몇 개의 pod이<strong>Pending</strong>상태입니다.</p>\n<p>이유는 k8s클러스터에 StorageClass가 정의되어있지 않기 때문입니다.\n(pvc의 요청을 받아줄 provisioner가 없기 때문)</p>\n<p>그래서 일단 pv옵션을 false로 변경해주어 EmptyDir을 사용하게 해야 합니다.</p>\n<p>Helm chart의 설정을 변경하는 방법은 크게 두가지 방법이 있습니다.</p>\n<h2 id=\"using-yaml\" style=\"position:relative;\"><a href=\"#using-yaml\" aria-label=\"using yaml permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>using yaml</h2>\n<p>문제가 되는 chart를 먼저 확인해봅시다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ helm inspect values stable/prometheus</code></pre></div>\n<p><img src=\"@attachment/Clipboard_2021-10-06-11-57-21.png\" alt=\"\"></p>\n<p>persistentVolume.enabled가True입니다. 이렇게 표기되어있는 부분이 총 세군데가 있습니다.</p>\n<p>수정할 부분만 따로 파일을 만들어주면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ vim volumeF.yaml\nalertmanager: persistentVolume: enabled: false server: persistentVolume: enabled: false pushgateway:\npersistentVolume: enabled: false\n\n업그레이드해줍시다.\n\n$ helm upgrade -f volumeF.yaml monitor stable/prometheus\n\n업그레이드 하게되면 Pending이었던 pod들이 Running상태로 변하는 것을 확인할 수 있습니다.</code></pre></div>\n<p><img src=\"@attachment/Clipboard_2021-10-06-11-57-44.png\" alt=\"\"></p>\n<h2 id=\"using-command\" style=\"position:relative;\"><a href=\"#using-command\" aria-label=\"using command permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>using Command</h2>\n<p>다른 방법으로는 커맨드라인으로 설정을 추가해주는 방법이 있습니다.</p>\n<p>outer: inner: value</p>\n<p>위와 같은 표현식을 다음과 같이 표현할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ --set outer.inner=value\n\n그럼 위 문제와 같은 경우는 다음과 같이 표현될 수 있습니다.\n\n$ helm install monitor stable/prometheus --set alertmanager.persistentVolume.enabled=false --set\n  server.persistentVolume.enabled=false --set pushgateway.persistentVolume.enabled=false\n\npod들이 정상적으로 Running되었으니 웹으로 접속해봅시다.\n$ kubectl get svc</code></pre></div>\n<h2 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<p><a href=\"https://tommypagy.tistory.com/187\">helm으로 프로메테우스 설치</a></p>"},{"frontmatter":{"tags":["typescript"],"title":"typescript eslint 설정"},"internal":{"content":"\n![](./images/typescript_image.png)\n\n# typescript eslint 설정\n\nvscode eslint 확장프로그램 설치\n\n```bash\nyarn add --dev eslint typescript @typescript-eslint/parser @typescript-eslint/eslint-plugin\n```\n\n```js\n// .eslintrc.js\nmodule.exports = {\n  root: true,\n  parser: \"@typescript-eslint/parser\",\n  plugins: [\"@typescript-eslint\"],\n  extends: [\"eslint:recommended\", \"plugin:@typescript-eslint/recommended\"],\n}\n```\n\n## eslint 실행\n\n```bash\nyarn run eslint [폴더위치] --ext .js,.jsx,.ts,.tsx\nyarn run eslint . --ext .js,.jsx,.ts,.tsx\n```\n\n## airbnb lint 적용하기\n\n```bash\nyarn add -D eslint-config-airbnb-typescript \\\n            @typescript-eslint/eslint-plugin@^5.0.0 \\\n            @typescript-eslint/parser@^5.0.0\n```\n\n```js\nmodule.exports = {\n  root: true,\n  parser: \"@typescript-eslint/parser\",\n  parserOptions: {\n    tsconfigRootDir: __dirname,\n    project: [\"./tsconfig.json\"],\n  },\n  plugins: [\"@typescript-eslint\"],\n  extends: [\"airbnb-typescript\"],\n}\n```\n\n## 참고문서\n\n[공식 typescript eslint](https://typescript-eslint.io/docs/linting/)\n\n[eslint-config-airbnb-typescript npm](https://www.npmjs.com/package/eslint-config-airbnb-typescript)\n"},"html":"<p><img src=\"./images/typescript_image.png\" alt=\"\"></p>\n<h1 id=\"typescript-eslint-설정\" style=\"position:relative;\"><a href=\"#typescript-eslint-%EC%84%A4%EC%A0%95\" aria-label=\"typescript eslint 설정 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>typescript eslint 설정</h1>\n<p>vscode eslint 확장프로그램 설치</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> --dev eslint typescript @typescript-eslint/parser @typescript-eslint/eslint-plugin</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// .eslintrc.js</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  root<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  parser<span class=\"token operator\">:</span> <span class=\"token string\">\"@typescript-eslint/parser\"</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"@typescript-eslint\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">extends</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"eslint:recommended\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"plugin:@typescript-eslint/recommended\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"eslint-실행\" style=\"position:relative;\"><a href=\"#eslint-%EC%8B%A4%ED%96%89\" aria-label=\"eslint 실행 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>eslint 실행</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> run eslint <span class=\"token punctuation\">[</span>폴더위치<span class=\"token punctuation\">]</span> --ext .js,.jsx,.ts,.tsx\n<span class=\"token function\">yarn</span> run eslint <span class=\"token builtin class-name\">.</span> --ext .js,.jsx,.ts,.tsx</code></pre></div>\n<h2 id=\"airbnb-lint-적용하기\" style=\"position:relative;\"><a href=\"#airbnb-lint-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"airbnb lint 적용하기 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>airbnb lint 적용하기</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> -D eslint-config-airbnb-typescript <span class=\"token punctuation\">\\</span>\n            @typescript-eslint/eslint-plugin@^5.0.0 <span class=\"token punctuation\">\\</span>\n            @typescript-eslint/parser@^5.0.0</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  root<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  parser<span class=\"token operator\">:</span> <span class=\"token string\">\"@typescript-eslint/parser\"</span><span class=\"token punctuation\">,</span>\n  parserOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    tsconfigRootDir<span class=\"token operator\">:</span> __dirname<span class=\"token punctuation\">,</span>\n    project<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./tsconfig.json\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"@typescript-eslint\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">extends</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"airbnb-typescript\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"참고문서\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EB%AC%B8%EC%84%9C\" aria-label=\"참고문서 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고문서</h2>\n<p><a href=\"https://typescript-eslint.io/docs/linting/\">공식 typescript eslint</a></p>\n<p><a href=\"https://www.npmjs.com/package/eslint-config-airbnb-typescript\">eslint-config-airbnb-typescript npm</a></p>"},{"frontmatter":{"tags":["react native"],"title":"react native 가운데정렬"},"internal":{"content":"\n# react native 가운데정렬\n\n```javascript\nimport React, { Component } from \"react\"\nimport { Text, View, StyleSheet } from \"react-native\"\n\nconst styles = StyleSheet.create({\n  login: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n})\n\nclass Login extends Component {\n  render() {\n    return (\n      <View style={styles.login}>\n        <Text> Login </Text>\n      </View>\n    )\n  }\n}\n\nexport default Login\n```\n\n위 코드에서 alignItems는 가로로 가운데 정렬, justifyContent는 세로로 가운데 정렬, 하지만 flex 방향에 따라서 가로 세로 기준이 바뀔 수 있다\n\n![가운데 정렬](https://i.imgur.com/n4DVf3q.png)\n"},"html":"<h1 id=\"react-native-가운데정렬\" style=\"position:relative;\"><a href=\"#react-native-%EA%B0%80%EC%9A%B4%EB%8D%B0%EC%A0%95%EB%A0%AC\" aria-label=\"react native 가운데정렬 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>react native 가운데정렬</h1>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Text<span class=\"token punctuation\">,</span> View<span class=\"token punctuation\">,</span> StyleSheet <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-native\"</span>\n\n<span class=\"token keyword\">const</span> styles <span class=\"token operator\">=</span> StyleSheet<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  login<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    flex<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    justifyContent<span class=\"token operator\">:</span> <span class=\"token string\">\"center\"</span><span class=\"token punctuation\">,</span>\n    alignItems<span class=\"token operator\">:</span> <span class=\"token string\">\"center\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Login</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>login<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span> Login <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Login</code></pre></div>\n<p>위 코드에서 alignItems는 가로로 가운데 정렬, justifyContent는 세로로 가운데 정렬, 하지만 flex 방향에 따라서 가로 세로 기준이 바뀔 수 있다</p>\n<p><img src=\"https://i.imgur.com/n4DVf3q.png\" alt=\"가운데 정렬\"></p>"},{"frontmatter":{"tags":["cypress"],"title":"Cypress url 쿠키 삭제하는 문제"},"internal":{"content":"\n![](./images/cypress.png)\n\n# Cypress url 쿠키 삭제하는 문제\n\nCypress를 사용하다보면 인증 후 개발환경에서 잘 작동하던것처럼 작동하지 않는 경우가 있었다.\n왜인고 하니 cypress 자체가 각 테스트를 하기전 localstrage와 cookie를 삭제하는 문제가 있었다\n\n다음 코드를 추가해주면 위 문제를 해결된다\n\n## localstorage 보존\n\n```js\nbeforeEach(() => {\n  cy.restoreLocalStorage()\n})\n\nafterEach(() => {\n  cy.saveLocalStorage()\n})\n```\n\n## cookie 보존\n\n```js\n\nbefore(() => {\n    Cypress.Cookies.preserveOnce('쿠키이름1', '쿠키이름2', '쿠키이름3' ...)\n})\n\n```\n"},"html":"<p><img src=\"./images/cypress.png\" alt=\"\"></p>\n<h1 id=\"cypress-url-쿠키-삭제하는-문제\" style=\"position:relative;\"><a href=\"#cypress-url-%EC%BF%A0%ED%82%A4-%EC%82%AD%EC%A0%9C%ED%95%98%EB%8A%94-%EB%AC%B8%EC%A0%9C\" aria-label=\"cypress url 쿠키 삭제하는 문제 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cypress url 쿠키 삭제하는 문제</h1>\n<p>Cypress를 사용하다보면 인증 후 개발환경에서 잘 작동하던것처럼 작동하지 않는 경우가 있었다.\n왜인고 하니 cypress 자체가 각 테스트를 하기전 localstrage와 cookie를 삭제하는 문제가 있었다</p>\n<p>다음 코드를 추가해주면 위 문제를 해결된다</p>\n<h2 id=\"localstorage-보존\" style=\"position:relative;\"><a href=\"#localstorage-%EB%B3%B4%EC%A1%B4\" aria-label=\"localstorage 보존 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>localstorage 보존</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  cy<span class=\"token punctuation\">.</span><span class=\"token function\">restoreLocalStorage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">afterEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  cy<span class=\"token punctuation\">.</span><span class=\"token function\">saveLocalStorage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"cookie-보존\" style=\"position:relative;\"><a href=\"#cookie-%EB%B3%B4%EC%A1%B4\" aria-label=\"cookie 보존 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>cookie 보존</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">\n<span class=\"token function\">before</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    Cypress<span class=\"token punctuation\">.</span>Cookies<span class=\"token punctuation\">.</span><span class=\"token function\">preserveOnce</span><span class=\"token punctuation\">(</span><span class=\"token string\">'쿠키이름1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'쿠키이름2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'쿠키이름3'</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre></div>"},{"frontmatter":{"tags":["apollo"],"title":"apollo @client 지시문 & 캐시에 data쓰기"},"internal":{"content":"\n![](./images/apollo.png)\n\n# apollo client 지시문 & 캐시에 data쓰기\n\nApollo Client 가 캐시에서 가져 오도록 지정하는 것이다. @client 이렇게 붙여주기만 하면 된다 [Doc](https://www.apollographql.com/docs/tutorial/local-state)\n\n`예시`\n\n```javascript\nimport { Query, ApolloProvider } from \"react-apollo\"\nimport gql from \"graphql-tag\"\n\nimport Pages from \"./pages\"\nimport Login from \"./pages/login\"\nimport injectStyles from \"./styles\"\n\nconst IS_LOGGED_IN = gql`\n  query IsUserLoggedIn {\n    isLoggedIn @client\n  }\n`\n\ninjectStyles()\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Query query={IS_LOGGED_IN}>\n      {({ data }) => (data.isLoggedIn ? <Pages /> : <Login />)}\n    </Query>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n)\n```\n\n`직접 캐시에 쓰는 법`\n\n```javascript\nclient.writeData({ data: { isLoggedIn: false } })\n```\n\n```javascript\nimport React from \"react\"\nimport styled from \"react-emotion\"\nimport { ApolloConsumer } from \"react-apollo\"\n\nimport { menuItemClassName } from \"../components/menu-item\"\nimport { ReactComponent as ExitIcon } from \"../assets/icons/exit.svg\"\n\nexport default function LogoutButton() {\n  return (\n    <ApolloConsumer>\n      {client => (\n        <StyledButton\n          onClick={() => {\n            client.writeData({ data: { isLoggedIn: false } })\n            localStorage.clear()\n          }}\n        >\n          <ExitIcon />\n          Logout\n        </StyledButton>\n      )}\n    </ApolloConsumer>\n  )\n}\n\nconst StyledButton = styled(\"button\")(menuItemClassName, {\n  background: \"none\",\n  border: \"none\",\n  padding: 0,\n})\n```\n"},"html":"<p><img src=\"./images/apollo.png\" alt=\"\"></p>\n<h1 id=\"apollo-client-지시문--캐시에-data쓰기\" style=\"position:relative;\"><a href=\"#apollo-client-%EC%A7%80%EC%8B%9C%EB%AC%B8--%EC%BA%90%EC%8B%9C%EC%97%90-data%EC%93%B0%EA%B8%B0\" aria-label=\"apollo client 지시문  캐시에 data쓰기 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>apollo client 지시문 &#x26; 캐시에 data쓰기</h1>\n<p>Apollo Client 가 캐시에서 가져 오도록 지정하는 것이다. @client 이렇게 붙여주기만 하면 된다 <a href=\"https://www.apollographql.com/docs/tutorial/local-state\">Doc</a></p>\n<p><code class=\"language-text\">예시</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Query<span class=\"token punctuation\">,</span> ApolloProvider <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-apollo\"</span>\n<span class=\"token keyword\">import</span> gql <span class=\"token keyword\">from</span> <span class=\"token string\">\"graphql-tag\"</span>\n\n<span class=\"token keyword\">import</span> Pages <span class=\"token keyword\">from</span> <span class=\"token string\">\"./pages\"</span>\n<span class=\"token keyword\">import</span> Login <span class=\"token keyword\">from</span> <span class=\"token string\">\"./pages/login\"</span>\n<span class=\"token keyword\">import</span> injectStyles <span class=\"token keyword\">from</span> <span class=\"token string\">\"./styles\"</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">IS_LOGGED_IN</span> <span class=\"token operator\">=</span> gql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  query IsUserLoggedIn {\n    isLoggedIn @client\n  }\n</span><span class=\"token template-punctuation string\">`</span></span>\n\n<span class=\"token function\">injectStyles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>ApolloProvider client<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>client<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Query query<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token constant\">IS_LOGGED_IN</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>isLoggedIn <span class=\"token operator\">?</span> <span class=\"token operator\">&lt;</span>Pages <span class=\"token operator\">/</span><span class=\"token operator\">></span> <span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>Login <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Query<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ApolloProvider<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">직접 캐시에 쓰는 법</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">client<span class=\"token punctuation\">.</span><span class=\"token function\">writeData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> isLoggedIn<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-emotion\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ApolloConsumer <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-apollo\"</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> menuItemClassName <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../components/menu-item\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ReactComponent <span class=\"token keyword\">as</span> ExitIcon <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../assets/icons/exit.svg\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">LogoutButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>ApolloConsumer<span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span><span class=\"token parameter\">client</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>StyledButton\n          onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            client<span class=\"token punctuation\">.</span><span class=\"token function\">writeData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> isLoggedIn<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>ExitIcon <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n          Logout\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>StyledButton<span class=\"token operator\">></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ApolloConsumer<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> StyledButton <span class=\"token operator\">=</span> <span class=\"token function\">styled</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"button\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>menuItemClassName<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  background<span class=\"token operator\">:</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">,</span>\n  border<span class=\"token operator\">:</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">,</span>\n  padding<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>"}],"distinct":["apollo","cypress","react native","typescript","쿠버네티스"]}}}